
(function(__ref__) {
  if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = __ref__;
  }
  else if (typeof exports === 'object') {
    exports['megadoc__config'] = __ref__;
  }
  else if (typeof window === 'object') {
    window['megadoc__config'] = __ref__;
  }
}({"collapsibleSidebar":false,"emittedFileExtension":".html","footer":"","banner":false,"bannerLinks":[],"customLayouts":[{"match":{"by":"namespace","on":["api","api--constraints","api--auxiliary"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::Module","options":{"className":"api-article"}}]},{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser","using":"articles"},{"name":"Core::SidebarHeader","options":{"text":"API"}},{"name":"JS::Browser","using":"api"},{"name":"Core::SidebarHeader","options":{"text":"API: Auxiliary"}},{"name":"JS::Browser","using":"api--auxiliary"},{"name":"Core::SidebarHeader","options":{"text":"API: Constraints"}},{"name":"JS::Browser","using":"api--constraints"}]}]},{"match":{"by":"url","on":"*"},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document"}]},{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser","using":"articles"},{"name":"Core::SidebarHeader","options":{"text":"API"}},{"name":"JS::Browser","using":"api"},{"name":"Core::SidebarHeader","options":{"text":"API: Auxiliary"}},{"name":"JS::Browser","using":"api--auxiliary"},{"name":"Core::SidebarHeader","options":{"text":"API: Constraints"}},{"name":"JS::Browser","using":"api--constraints"}]}]}],"redirect":{},"rewrite":{"/readme.html":"/index.html"},"metaDescription":"","motto":null,"pluginCount":3,"pluginNames":["megadoc-plugin-markdown","megadoc-plugin-js","megadoc-theme-minimalist"],"resizableSidebar":false,"fixedSidebar":true,"invertedSidebar":false,"sidebarWidth":340,"scrollSpying":false,"spotlight":true,"title":"Full Metal Alchemy","tooltipPreviews":false,"version":"6.5.0","database":[{"id":"articles","name":"megadoc-plugin-markdown","title":"Full Metal Alchemy","meta":{"href":"/index.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser"},{"name":"Core::Sidebar"}]}]},{"match":{"by":"type","on":["Namespace"]},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser"}]}]}],"anchor":"articles","htmlFilePath":"index.html"},"config":{"id":"articles","title":"Full Metal Alchemy","baseURL":"/","fullFolderTitles":true,"fullFolderTitleDelimiter":" - ","allowLeadingSlashInLinks":true,"generateMissingHeadings":true,"discardIdPrefix":null,"discardFileExtension":true,"sanitize":true,"titleOverrides":{},"preformat":{}},"indexFields":["$uid","$filePath"],"documents":["2d966dc411c413a357e52bb0843e96ac","86e6908f05d91000d049203416e7103f"],"type":"Namespace","symbol":"/","uid":"793c199277a8254c22fd7539205c12ac","path":"articles","indices":{}},{"id":"readme","title":"Full Metal Alchemy\n","filePath":"README.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"full-metal-alchemy\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#full-metal-alchemy\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Full Metal Alchemy</span>\n</h1><p>Full Metal Alchemy is a high-level analytics library for refining raw\napplication events into meaningful metrics. Its purpose is to help shape,\naggregate, or buffer events to provide you with better insight from the events\nthat are eventually submitted to your analytics provider.</p>\n<p>The library is agnostic to your analytics provider (e.g. Google Analytics or\nMixpanel) since it operates at a layer between your application code and the\none that submits events to that backend.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"how-it-works\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#how-it-works\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">How it works</span>\n</h2><p>The heart of Full Metal Alchemy is in the <a href=\"api/refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refine</a> routine which takes as\ninput a bunch of events triggered by your application, such as UI events, and\nruns them through a set of refinement rules called <a href=\"api/createState.html#~Metric\" title=\"The definition of a metric and the points it should produce.\" class=\"mega-link--internal\">metrics</a>. A\nmetric can produce a <a href=\"api/refine.html#~MetricPoint\" class=\"mega-link--internal\">metric point</a> which is the refined\nversion of the source event(s) and it is what you end up submitting to your\nbackend.</p>\n<p>The next section goes over those concepts and later sections show how to\nutilize them, or you can choose to jump to the <a href=\"#usage\" class=\"mega-link--internal\">usage</a>\nsection right away if you&#39;re feeling adventurous.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"concepts\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#concepts\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Concepts</span>\n</h2>\n<h3 class=\"anchorable-heading\">\n  <a name=\"application-events\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#application-events\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Application events</span>\n</h3><p>An application event represents a micro-interaction with some function of your\napplication. In itself such an event may not be useful to track, perhaps\nbecause it&#39;s too fine-grained and would end up cluttering your reports, or that\nit doesn&#39;t capture the whole picture of the interaction (e.g. it needs to be\ncorrelated with other events to do so.)</p>\n<p>Examples of such events can include:</p>\n<ul>\n<li>pressing a keybinding to trigger some UI function like a Search widget</li>\n<li>performing a sequence of interactions with a UI widget like a Filter control</li>\n<li>a page visit</li>\n<li>a call to an API with certain parameters</li>\n</ul>\n<p>If you&#39;re adding FMA to an existing analytics architecture, these events would\nbe what you&#39;re already submitting to the backend. However, with FMA they are\nconsidered &quot;raw&quot; events that we want to further refine into useful metrics.</p>\n<p>Let&#39;s look at metrics now.</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"metrics-and-points\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#metrics-and-points\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Metrics and points</span>\n</h3><p>A metric represents an interaction with your application <strong>that you want to\ntrack and analyze</strong>. It is defined as a set of rules to apply over one or more\nraw application events to produce <em>points</em>.</p>\n<p>Points are produced when certain application events are triggered and can\ncontain data from application events (or the <a href=\"#application-context\" class=\"mega-link--internal\">context</a> as we&#39;ll see later) but more interestingly, their\nproduction can be <em>conditioned</em> using <em>constraints</em>.</p>\n<p>Constraints are the &quot;brains&quot; of metrics and they&#39;re probably the reason you&#39;d want to use the library, so let&#39;s learn about them.</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"constraints\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#constraints\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Constraints</span>\n</h3><p>A constraint is a group of functions that are defined on a metric to answer the\nfollowing questions:</p>\n<ol>\n<li>Is an application event, with its data, relevant to the metric?</li>\n<li>Can a point be produced?</li>\n</ol>\n<p>To answer those questions, a constraint maintains a state object and has the\nability to adjust it every time an event is triggered. Thus, its answer can\nchange from an event to another.</p>\n<p>Constraints can provide a wide variety of control. For example, we can\ncondition a metric to produce a point at most once an hour, which would be\nideal for granular events that are expected to be triggered rapidly during a\nsession. In this case, we&#39;re only interested in the <em>visibility</em> of a function\nand not in how many times it&#39;s used.</p>\n<p>You can browse the available constraints in the navigation to the left. You can\nalso create your own constraints as explained in its <a href=\"api/Constraint.html\" title=\"The interface of a constraint and its available hooks.\" class=\"mega-link--internal\">api documentation</a>.</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"application-context\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#application-context\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Application context</span>\n</h3><p>For practicality purposes, FMA accepts an arbitrary dependency to expose to\n<a href=\"api/Constraint.html\" title=\"The interface of a constraint and its available hooks.\" class=\"mega-link--internal\">constraints</a> and to <a href=\"api/createState.html#~Metric.dataPoints\" class=\"mega-link--internal\">data point evaluators</a>. This dependency is referred to as the context\nand it can contain <strong>whatever data you may need to produce points</strong>.</p>\n<p>The context is particularly useful when modeling UI interactions; for example\nif you&#39;re on a page for a specific product and you want all the points produced\nwhile on that page to have the relevant <code>productId</code>, you aren&#39;t required to\nattach such a data point to <em>every</em> event you trigger. Instead, you would\ndefine it once on the context object (e.g. at the time of page visit) and then\nreference that context for the product id when you produce the point.</p>\n<p>Further, the context can be modified during <a href=\"api/refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refinement</a> by\nconstraints you implement and is yielded back to you to re-inject in your\napplication</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"data-points\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#data-points\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Data points</span>\n</h3><p>A data point refers to a single piece of data you want to attach to a metric\npoint when it&#39;s produced. Those points can be extracted from application events\nor the context, or just have a pre-defined static value.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"usage\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#usage\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Usage</span>\n</h2><p>For a start we need to define the metrics we want to track. The definition of a\nmetric is described in detail <a href=\"api/createState.html#~Metric\" title=\"The definition of a metric and the points it should produce.\" class=\"mega-link--internal\">here</a> but for now we&#39;ll use a minimal\ndefinition:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >const</span> metrics <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span>\n  <span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'User logged in'</span><span class=\"token punctuation\" >,</span>\n    events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n      <span class=\"token string\" >'logged-in'</span>\n    <span class=\"token punctuation\" >]</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >]</span></code></pre><p>Before we get to <a href=\"api/refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refine</a> we need to create an initial state for the metrics\nand their constraints using the the <a href=\"api/createState.html\" title=\"Create a blank state for [[refinement | refine]].\" class=\"mega-link--internal\">createState</a> API.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> createState <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token keyword\" >const</span> metrics <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span> <span class=\"token comment\" spellcheck=\"true\">// from before</span>\n\n<span class=\"token keyword\" >let</span> metricState <span class=\"token operator\" >=</span> <span class=\"token function\" >createState</span><span class=\"token punctuation\" >(</span>metrics<span class=\"token punctuation\" >)</span></code></pre><p>Now we&#39;re ready to start producing points. We&#39;ll feed <a href=\"api/refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refine</a> with the\nmetric state we&#39;ve prepared along with some application events:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> refine <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token keyword\" >const</span> metricEvents <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span> <span class=\"token comment\" spellcheck=\"true\">// from before</span>\n<span class=\"token keyword\" >let</span> metricState <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span>    <span class=\"token comment\" spellcheck=\"true\">// from before</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// assume we got those from the application somehow:</span>\n<span class=\"token keyword\" >const</span> events <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span>\n  <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'logged-out'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'logged-in'</span> <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >]</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// run them through and produce points eligible for submission:</span>\n<span class=\"token keyword\" >const</span> nextMetricState <span class=\"token operator\" >=</span> <span class=\"token function\" >refine</span><span class=\"token punctuation\" >(</span>metricState<span class=\"token punctuation\" >,</span> events<span class=\"token punctuation\" >)</span></code></pre><p>To see if any points were produced, you can inspect the <a href=\"api/createState.html#~MetricState.points\" class=\"mega-link--internal\">.points</a> property of the <a href=\"api/createState.html#~MetricState\" title=\"The &quot;metric state&quot; is a transient structure to be used as input for [[refinement | refine]]. It contains a reference to the metrics to be used as well as the output of the process; the metric points and, optionally, the adjusted context.\" class=\"mega-link--internal\">metric state</a>:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >const</span> pointsToSubmit <span class=\"token operator\" >=</span> nextMetricState<span class=\"token punctuation\" >.</span>points\n\n<span class=\"token comment\" spellcheck=\"true\">// perhaps you'd submit them immediately:</span>\npointsToSubmit<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span>point <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  analyticsAdapter<span class=\"token punctuation\" >.</span><span class=\"token function\" >submit</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> point<span class=\"token punctuation\" >.</span>name\n    data<span class=\"token punctuation\" >:</span> point<span class=\"token punctuation\" >.</span>data\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre><p>Finally, be sure to grab a reference to the advanced state before the next call\nto refine:</p>\n<pre class=\"language-javascript\"><code>metricState <span class=\"token operator\" >=</span> nextMetricState</code></pre><p>That should be the primary flow. Keep in mind that the APIs are immutable; they\nwon&#39;t have side-effects on any of the input parameters. For this reason it is\nnecessary to keep a reference to the &quot;next&quot; state and feed it as input to the\nnext call.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"where-to-go-from-here\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#where-to-go-from-here\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Where to go from here</span>\n</h2><p>Look into the <a href=\"api/createState.html#~Metric\" title=\"The definition of a metric and the points it should produce.\" class=\"mega-link--internal\">metric definition</a> in more detail then perhaps go\nover the available constraints which you can find in the sidebar.</p>\n<p>If you&#39;re looking to write your own constraints, consult the <a href=\"api/Constraint.html\" title=\"The interface of a constraint and its available hooks.\" class=\"mega-link--internal\">Constraint</a>\ndocumentation.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"license\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#license\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">License</span>\n</h2><p>Copyright 2018 Ahmad Amireh <a href=\"&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#97;&#104;&#109;&#97;&#x64;&#x40;&#x61;&#109;&#105;&#114;&#x65;&#x68;&#x2e;&#x6e;&#101;&#x74;\" target=\"_blank\">&#97;&#104;&#109;&#97;&#x64;&#x40;&#x61;&#109;&#105;&#114;&#x65;&#x68;&#x2e;&#x6e;&#101;&#x74;</a>.</p>\n<p>This library is licensed under the MIT license.</p>\n","title":"Full Metal Alchemy","wordCount":1128,"plainTitle":"Full Metal Alchemy\n","fileName":"README","folder":".","id":"readme","sortingId":"README.md"},"symbol":"#","meta":{"anchor":"full-metal-alchemy","hrefRewritten":true,"href":"/index.html","htmlFilePath":"index.html"},"entities":["925d59bb680ee39c611d4a35c395164b","7052b4984ecdd1867b8c174156132631","004c98163877755298083ea1e9e0ef98","38931e2554bed5c737ed7fff333dcbd9","0e3141b64078c46728fe7bbb488d2393","3f0351a80f39420dbf85d6a2f1cf3351","0d43458bbe5f0572ba0435bcee589544","19dac0dacde43b6c2a624e6acd1a1dee","002c93bb9fa8168cecb0d3e1b98bcb0c","f5e3e09d0949af603317522cea021748","439c0872cdc1288ff965555dd6246d30","deb6bc4af44260726406e206f46e3e25"],"documents":[],"type":"Document","uid":"2d966dc411c413a357e52bb0843e96ac","summary":"Full Metal Alchemy is a high-level analytics library for refining raw application events into meaningful metrics. Its purpose is to help shape, aggregate, or buffer events to provide you with better insight from the events that are eventually submitted to your analytics provider.","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/readme","indices":{"readme":1,"/README.md":1,"README.md":1}},{"id":"full-metal-alchemy","title":"Full Metal Alchemy","properties":{"id":"full-metal-alchemy","scopedId":"full-metal-alchemy","level":1,"html":"Full Metal Alchemy","text":"Full Metal Alchemy"},"indexFields":[],"filePath":"README.md","meta":{"indexDisplayName":" Full Metal Alchemy","anchor":"full-metal-alchemy","href":"/index.html#full-metal-alchemy","htmlFilePath":null},"type":"DocumentEntity","uid":"925d59bb680ee39c611d4a35c395164b","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#full-metal-alchemy","indices":{}},{"id":"how-it-works","title":"How it works","properties":{"id":"how-it-works","scopedId":"how-it-works","level":2,"html":"How it works","text":"How it works"},"filePath":"README.md","meta":{"indexDisplayName":"   How it works","anchor":"how-it-works","href":"/index.html#how-it-works","htmlFilePath":null},"type":"DocumentEntity","uid":"7052b4984ecdd1867b8c174156132631","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#how-it-works","indices":{"how-it-works":0,"readme#how-it-works":1,"/README.md#how-it-works":1,"README.md#how-it-works":1}},{"id":"concepts","title":"Concepts","properties":{"id":"concepts","scopedId":"concepts","level":2,"html":"Concepts","text":"Concepts"},"filePath":"README.md","meta":{"indexDisplayName":"   Concepts","anchor":"concepts","href":"/index.html#concepts","htmlFilePath":null},"type":"DocumentEntity","uid":"004c98163877755298083ea1e9e0ef98","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#concepts","indices":{"concepts":0,"readme#concepts":1,"/README.md#concepts":1,"README.md#concepts":1}},{"id":"application-events","title":"Application events","properties":{"id":"application-events","scopedId":"application-events","level":3,"html":"Application events","text":"Application events"},"filePath":"README.md","meta":{"indexDisplayName":"     Application events","anchor":"application-events","href":"/index.html#application-events","htmlFilePath":null},"type":"DocumentEntity","uid":"38931e2554bed5c737ed7fff333dcbd9","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#application-events","indices":{"application-events":0,"readme#application-events":1,"/README.md#application-events":1,"README.md#application-events":1}},{"id":"metrics-and-points","title":"Metrics and points","properties":{"id":"metrics-and-points","scopedId":"metrics-and-points","level":3,"html":"Metrics and points","text":"Metrics and points"},"filePath":"README.md","meta":{"indexDisplayName":"     Metrics and points","anchor":"metrics-and-points","href":"/index.html#metrics-and-points","htmlFilePath":null},"type":"DocumentEntity","uid":"0e3141b64078c46728fe7bbb488d2393","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#metrics-and-points","indices":{"metrics-and-points":0,"readme#metrics-and-points":1,"/README.md#metrics-and-points":1,"README.md#metrics-and-points":1}},{"id":"application-context-as-we-ll-see-later-but-more-interestingly-their","title":"application-context]] as we'll see later) but more interestingly, their","properties":{"id":"application-context-as-we-ll-see-later-but-more-interestingly-their","scopedId":"application-context-as-we-ll-see-later-but-more-interestingly-their","level":1,"html":"application-context]] as we&#39;ll see later) but more interestingly, their","text":"application-context]] as we'll see later) but more interestingly, their"},"indexFields":[],"filePath":"README.md","meta":{"indexDisplayName":" application-context]] as we'll see later) but more interestingly, their","anchor":"application-context-as-we-ll-see-later-but-more-interestingly-their","href":"/index.html#application-context-as-we-ll-see-later-but-more-interestingly-their","htmlFilePath":null},"type":"DocumentEntity","uid":"3f0351a80f39420dbf85d6a2f1cf3351","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#application-context-as-we-ll-see-later-but-more-interestingly-their","indices":{}},{"id":"constraints","title":"Constraints","properties":{"id":"constraints","scopedId":"constraints","level":3,"html":"Constraints","text":"Constraints"},"filePath":"README.md","meta":{"indexDisplayName":"     Constraints","anchor":"constraints","href":"/index.html#constraints","htmlFilePath":null},"type":"DocumentEntity","uid":"0d43458bbe5f0572ba0435bcee589544","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#constraints","indices":{"constraints":0,"readme#constraints":1,"/README.md#constraints":1,"README.md#constraints":1}},{"id":"application-context","title":"Application context","properties":{"id":"application-context","scopedId":"application-context","level":3,"html":"Application context","text":"Application context"},"filePath":"README.md","meta":{"indexDisplayName":"     Application context","anchor":"application-context","href":"/index.html#application-context","htmlFilePath":null},"type":"DocumentEntity","uid":"19dac0dacde43b6c2a624e6acd1a1dee","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#application-context","indices":{"application-context":0,"readme#application-context":1,"/README.md#application-context":1,"README.md#application-context":1}},{"id":"data-points","title":"Data points","properties":{"id":"data-points","scopedId":"data-points","level":3,"html":"Data points","text":"Data points"},"filePath":"README.md","meta":{"indexDisplayName":"     Data points","anchor":"data-points","href":"/index.html#data-points","htmlFilePath":null},"type":"DocumentEntity","uid":"002c93bb9fa8168cecb0d3e1b98bcb0c","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#data-points","indices":{"data-points":0,"readme#data-points":1,"/README.md#data-points":1,"README.md#data-points":1}},{"id":"usage","title":"Usage","properties":{"id":"usage","scopedId":"usage","level":2,"html":"Usage","text":"Usage"},"filePath":"README.md","meta":{"indexDisplayName":"   Usage","anchor":"usage","href":"/index.html#usage","htmlFilePath":null},"type":"DocumentEntity","uid":"f5e3e09d0949af603317522cea021748","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#usage","indices":{"usage":0,"readme#usage":1,"/README.md#usage":1,"README.md#usage":1}},{"id":"where-to-go-from-here","title":"Where to go from here","properties":{"id":"where-to-go-from-here","scopedId":"where-to-go-from-here","level":2,"html":"Where to go from here","text":"Where to go from here"},"filePath":"README.md","meta":{"indexDisplayName":"   Where to go from here","anchor":"where-to-go-from-here","href":"/index.html#where-to-go-from-here","htmlFilePath":null},"type":"DocumentEntity","uid":"439c0872cdc1288ff965555dd6246d30","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#where-to-go-from-here","indices":{"where-to-go-from-here":0,"readme#where-to-go-from-here":1,"/README.md#where-to-go-from-here":1,"README.md#where-to-go-from-here":1}},{"id":"license","title":"License","properties":{"id":"license","scopedId":"license","level":2,"html":"License","text":"License"},"filePath":"README.md","meta":{"indexDisplayName":"   License","anchor":"license","href":"/index.html#license","htmlFilePath":null},"type":"DocumentEntity","uid":"deb6bc4af44260726406e206f46e3e25","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#license","indices":{"license":0,"readme#license":1,"/README.md#license":1,"README.md#license":1}},{"id":"changelog","title":"CHANGELOG\n","filePath":"CHANGELOG.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"changelog\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#changelog\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">CHANGELOG</span>\n</h1>\n<h2 class=\"anchorable-heading\">\n  <a name=\"2-1-0\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#2-1-0\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">2.1.0</span>\n</h2><ul>\n<li><a href=\"api/ParametricRateConstraint.html\" title=\"Like [[./RateConstraint.js]], throttle a point from being produced more than once during a certain period but for any specific data set.\" class=\"mega-link--internal\">ParametricRateConstraint</a> now accepts a new option for utilizing the\ncontext in bucketing</li>\n</ul>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"2-0-0\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#2-0-0\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">2.0.0</span>\n</h2><p>Major release primarily allowing custom constraints to be implemented and has\nintroduced support for context.</p>\n","title":"CHANGELOG","wordCount":32,"plainTitle":"CHANGELOG\n","fileName":"CHANGELOG","folder":".","id":"changelog","sortingId":"CHANGELOG.md"},"symbol":"#","meta":{"anchor":"changelog","href":"/changelog.html","htmlFilePath":"changelog.html"},"entities":["bd07d99ded377ed6f2c786319119cca1","2d7e2d60cc1f75edf16f5a171a1a6405","6e8740e7a0fd30f7b2f7ae8782244e2b"],"documents":[],"type":"Document","uid":"86e6908f05d91000d049203416e7103f","summary":"Major release primarily allowing custom constraints to be implemented and has introduced support for context.","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/changelog","indices":{"changelog":1,"/CHANGELOG.md":1,"CHANGELOG.md":1}},{"id":"changelog","title":"CHANGELOG","properties":{"id":"changelog","scopedId":"changelog","level":1,"html":"CHANGELOG","text":"CHANGELOG"},"indexFields":[],"filePath":"CHANGELOG.md","meta":{"indexDisplayName":" CHANGELOG","anchor":"changelog","href":"/changelog.html#changelog","htmlFilePath":null},"type":"DocumentEntity","uid":"bd07d99ded377ed6f2c786319119cca1","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#changelog","indices":{}},{"id":"2-1-0","title":"2.1.0","properties":{"id":"2-1-0","scopedId":"2-1-0","level":2,"html":"2.1.0","text":"2.1.0"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   2.1.0","anchor":"2-1-0","href":"/changelog.html#2-1-0","htmlFilePath":null},"type":"DocumentEntity","uid":"2d7e2d60cc1f75edf16f5a171a1a6405","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#2-1-0","indices":{"2-1-0":0,"changelog#2-1-0":1,"/CHANGELOG.md#2-1-0":1,"CHANGELOG.md#2-1-0":1}},{"id":"2-0-0","title":"2.0.0","properties":{"id":"2-0-0","scopedId":"2-0-0","level":2,"html":"2.0.0","text":"2.0.0"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   2.0.0","anchor":"2-0-0","href":"/changelog.html#2-0-0","htmlFilePath":null},"type":"DocumentEntity","uid":"6e8740e7a0fd30f7b2f7ae8782244e2b","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#2-0-0","indices":{"2-0-0":0,"changelog#2-0-0":1,"/CHANGELOG.md#2-0-0":1,"CHANGELOG.md#2-0-0":1}},{"id":"api","name":"megadoc-plugin-js","title":"FMA API","meta":{"href":"/api.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::ModuleIndex"},{"name":"JS::ModuleBody"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]}]},{"match":{"by":"type","on":"Namespace"},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]},{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::Namespace"},{"name":"Core::Content"}]}]}],"anchor":"api","htmlFilePath":"api.html"},"config":{"id":"js","baseURL":"/api","title":"FMA API","source":["**/*.js"],"exclude":null,"useDirAsNamespace":true,"inferModuleIdFromFileName":true,"inferNamespaces":true,"analyzeNode":null,"customTags":{},"showSourcePaths":false,"verbose":false,"alias":{},"parse":null,"parserOptions":null,"namespaceDirMap":{},"moduleMap":{},"namedReturnTags":true,"builtInTypes":[],"docstringProcessors":[],"tagProcessors":[],"tagAliases":{},"linkToNamespacesInBrowser":false,"hideBlankParameters":true,"hideBlankReturns":true,"hidePrivateSymbols":true,"expandReturnedFunctionSignature":true,"showTypeDefsInBrowser":false,"showTypeDefPropertiesInBrowser":true,"expandReturnedFunctionSignatures":true},"indexFields":["$uid","$filePath","aliases"],"documents":["e9518fb5dd7a65108b7ed1929b15500e","00e61af7f04ca590b8fe04c1544545bf"],"type":"Namespace","symbol":"/","uid":"55ba8448e702d245fd326c5aefb94095","path":"api","indices":{}},{"id":"createState","title":"createState","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":20,"column":20},"end":{"line":41,"column":2}},"symbol":"","properties":{"aliases":[],"description":"<p>Create a blank state for <a href=\"refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refinement</a>.</p>\n","id":"createState","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":20,"column":20},"end":{"line":41,"column":2}},"line":20,"mixinTargets":[],"name":"createState","nodeInfo":{"type":"Function","params":[{"name":"metrics"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"metrics","type":{"name":"Array","elements":[{"name":"Metric","html":"<a class=\"mega-link--internal\" href=\"#~Metric\" title=\"The definition of a metric and the points it should produce.\">Metric</a>"}],"html":"Array"}},"line":20},{"type":"return","string":"","typeInfo":{"type":{"name":"MetricState","html":"<a class=\"mega-link--internal\" href=\"#~MetricState\" title=\"The &quot;metric state&quot; is a transient structure to be used as input for [[refinement | refine]]. It contains a reference to the metrics to be used as well as the output of the process; the metric points and, optionally, the adjusted context.\">MetricState</a>"}},"line":20}],"type":"Function"},"type":"Document","meta":{"href":"/api/createState.html","anchor":"createState","htmlFilePath":"api/createState.html"},"documents":[],"entities":["4b188d24a0542f0031865d45006ec216","80e4c21f35a87a3bc5f1f5332f4ab49f"],"uid":"e9518fb5dd7a65108b7ed1929b15500e","summary":"Create a blank state for [[refinement | refine]].","parentNodeUID":"55ba8448e702d245fd326c5aefb94095","path":"api/createState","indices":{"createState":1,"/lib/createState.js":1,"lib/createState.js":1}},{"id":"~MetricState","title":"createState~MetricState","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":20,"column":20},"end":{"line":41,"column":2}},"properties":{"aliases":["MetricState"],"description":"<p>The &quot;metric state&quot; is a transient structure to be used as input for\n<a href=\"refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refinement</a>. It contains a reference to the metrics to be used as\nwell as the output of the process; the metric points and, optionally, the\nadjusted context.</p>\n","id":"createState~MetricState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":20,"column":20},"end":{"line":41,"column":2}},"line":20,"mixinTargets":[],"name":"MetricState","nodeInfo":{"type":"Function","params":[{"name":"metrics"}]},"receiver":"createState","symbol":"~","tags":[{"type":"typedef","string":"","typeInfo":{"name":"createState~MetricState","description":null,"isOptional":null,"defaultValue":null,"type":{"0":"o","1":"b","2":"j","3":"e","4":"c","5":"t"}},"line":20},{"type":"type","string":"","typeInfo":{"type":{"name":"Object"}},"line":20},{"type":"alias","string":"The \"metric state\" is a transient structure to be used as input for\n[[refinement | refine]]. It contains a reference to the metrics to be used as\nwell as the output of the process; the metric points and, optionally, the\nadjusted context.","typeInfo":{"name":"MetricState","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":20}],"type":"Object"},"indices":{"~MetricState":0,"createState~MetricState":1,"MetricState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~MetricState","anchor":"~MetricState","htmlFilePath":null},"uid":"4b188d24a0542f0031865d45006ec216","summary":"The \"metric state\" is a transient structure to be used as input for [[refinement | refine]]. It contains a reference to the metrics to be used as well as the output of the process; the metric points and, optionally, the adjusted context.","documents":[],"entities":["9b61c1fe173f5ef432837f07a76a9d85","7e07e5c803efb29bff82e86b4c181125","191f8a6bc511c6374fb16c5773936b68"],"parentNodeUID":"e9518fb5dd7a65108b7ed1929b15500e","path":"api/createState~MetricState"},{"id":".metrics","title":"createState~MetricState.metrics","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}},"properties":{"aliases":[],"description":"","id":"createState~MetricState.metrics","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}},"line":26,"mixinTargets":[],"name":"metrics","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"createState~MetricState","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~MetricState","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":26},{"type":"static","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":26},{"type":"property","string":"","typeInfo":{"name":"metrics","type":{"name":"Array","elements":[{"name":"Metric","html":"<a class=\"mega-link--internal\" href=\"#~Metric\" title=\"The definition of a metric and the points it should produce.\">Metric</a>"}],"html":"Array"}},"line":26}],"type":"Array"},"indices":{".metrics":0,"~MetricState.metrics":1,"createState~MetricState.metrics":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~MetricState.metrics","anchor":"~MetricState.metrics","htmlFilePath":null},"uid":"9b61c1fe173f5ef432837f07a76a9d85","parentNodeUID":"4b188d24a0542f0031865d45006ec216","path":"api/createState~MetricState.metrics"},{"id":".points","title":"createState~MetricState.points","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":12}},"properties":{"aliases":[],"description":"","id":"createState~MetricState.points","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":12}},"line":33,"mixinTargets":[],"name":"points","nodeInfo":{"type":"Array","scope":"factory_exports","elements":[]},"receiver":"createState~MetricState","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~MetricState","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":33},{"type":"static","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":33},{"type":"property","string":"","typeInfo":{"name":"points","type":{"name":"Array","elements":[{"name":"MetricPoint","html":"<a class=\"mega-link--internal\" href=\"refine.html#~MetricPoint\">MetricPoint</a>"}],"html":"Array"}},"line":33}],"type":"Array"},"indices":{".points":0,"~MetricState.points":1,"createState~MetricState.points":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~MetricState.points","anchor":"~MetricState.points","htmlFilePath":null},"uid":"7e07e5c803efb29bff82e86b4c181125","parentNodeUID":"4b188d24a0542f0031865d45006ec216","path":"api/createState~MetricState.points"},{"id":".context","title":"createState~MetricState.context","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":20}},"properties":{"aliases":[],"description":"","id":"createState~MetricState.context","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":20}},"line":40,"mixinTargets":[],"name":"context","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"createState~MetricState","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~MetricState","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":40},{"type":"static","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":40},{"type":"property","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":40}],"type":"Any"},"indices":{".context":0,"~MetricState.context":1,"createState~MetricState.context":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~MetricState.context","anchor":"~MetricState.context","htmlFilePath":null},"uid":"191f8a6bc511c6374fb16c5773936b68","parentNodeUID":"4b188d24a0542f0031865d45006ec216","path":"api/createState~MetricState.context"},{"id":"~Metric","title":"createState~Metric","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":50,"column":21},"end":{"line":146,"column":2}},"properties":{"aliases":["Metric"],"description":"<p>The definition of a metric and the points it should produce.</p>\n","id":"createState~Metric","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":50,"column":21},"end":{"line":146,"column":2}},"line":50,"mixinTargets":[],"name":"Metric","nodeInfo":{"type":"Function","params":[null]},"receiver":"createState","symbol":"~","tags":[{"type":"typedef","string":"","typeInfo":{"name":"createState~Metric","description":null,"isOptional":null,"defaultValue":null,"type":{"0":"o","1":"b","2":"j","3":"e","4":"c","5":"t"}},"line":50},{"type":"type","string":"","typeInfo":{"type":{"name":"Object"}},"line":50},{"type":"alias","string":"The definition of a metric and the points it should produce.","typeInfo":{"name":"Metric","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":50}],"type":"Object"},"indices":{"~Metric":0,"createState~Metric":1,"Metric":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~Metric","anchor":"~Metric","htmlFilePath":null},"uid":"80e4c21f35a87a3bc5f1f5332f4ab49f","summary":"The definition of a metric and the points it should produce.","documents":[],"entities":["53aca80825b9968534fb418f8a1bdc7e","6e261980d26943f2e7e29d0c6ceee8d1","75a8c7c11806a4978f15014b82005e78","527cb1e5914fb4d185c339a0098d0cdc"],"parentNodeUID":"e9518fb5dd7a65108b7ed1929b15500e","path":"api/createState~Metric"},{"id":".events","title":"createState~Metric.events","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":8}},"properties":{"aliases":[],"description":"","id":"createState~Metric.events","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":8}},"line":61,"mixinTargets":[],"name":"events","nodeInfo":{"type":"Function","params":[null]},"receiver":"createState~Metric","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~Metric","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":61},{"type":"property","string":"Convenience property for defining a [[type constraint | TypeConstraint]] on\nthis metric to make it use only the events specified.","typeInfo":{"name":"events","description":"<p>Convenience property for defining a <a href=\"TypeConstraint.html\" title=\"Block events that do not match the specified names or data.\" class=\"mega-link--internal\">type constraint</a> on\nthis metric to make it use only the events specified.</p>\n","type":{"name":"Array","elements":[{"name":"String","html":"String"}],"html":"Array"}},"line":61}],"type":"Array"},"indices":{".events":0,"~Metric.events":1,"createState~Metric.events":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~Metric.events","anchor":"~Metric.events","htmlFilePath":null},"uid":"53aca80825b9968534fb418f8a1bdc7e","parentNodeUID":"80e4c21f35a87a3bc5f1f5332f4ab49f","path":"api/createState~Metric.events"},{"id":".name","title":"createState~Metric.name","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":6}},"properties":{"aliases":[],"description":"","id":"createState~Metric.name","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":6}},"line":73,"mixinTargets":[],"name":"name","nodeInfo":{"type":"Function","params":[null]},"receiver":"createState~Metric","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~Metric","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":73},{"type":"property","string":"A name to associate with the points produced by this metric. It is worth\nnoting that this name does not have to be unique. You can have multiple\nmetrics generating points with the same \"name\" but from different sources.","typeInfo":{"name":"name","description":"<p>A name to associate with the points produced by this metric. It is worth\nnoting that this name does not have to be unique. You can have multiple\nmetrics generating points with the same &quot;name&quot; but from different sources.</p>\n","type":{"name":"String","html":"String"}},"line":73}],"type":"String"},"indices":{".name":0,"~Metric.name":1,"createState~Metric.name":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~Metric.name","anchor":"~Metric.name","htmlFilePath":null},"uid":"6e261980d26943f2e7e29d0c6ceee8d1","parentNodeUID":"80e4c21f35a87a3bc5f1f5332f4ab49f","path":"api/createState~Metric.name"},{"id":".constraints","title":"createState~Metric.constraints","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":84,"column":2},"end":{"line":100,"column":3}},"properties":{"aliases":[],"description":"","id":"createState~Metric.constraints","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":84,"column":2},"end":{"line":100,"column":3}},"line":84,"mixinTargets":[],"name":"constraints","nodeInfo":{"type":"Unknown"},"receiver":"createState~Metric","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~Metric","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":84},{"type":"property","string":"Constraints that control how and when points are produced. This is the\n\"meat\" of the metric and gives you a lot of power in [[refining | refine]]\nraw [[application events | ApplicationEvent]] into [[points |\nMetricPoint]].","typeInfo":{"name":"constraints","description":"<p>Constraints that control how and when points are produced. This is the\n&quot;meat&quot; of the metric and gives you a lot of power in <a href=\"refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refining</a>\nraw <a href=\"refine.html#~ApplicationEvent\" class=\"mega-link--internal\">application events</a> into <a href=\"refine.html#~MetricPoint\" class=\"mega-link--internal\">points</a>.</p>\n","type":{"name":"Array","elements":[{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}],"html":"Array"}},"line":84}],"type":"Array"},"indices":{".constraints":0,"~Metric.constraints":1,"createState~Metric.constraints":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~Metric.constraints","anchor":"~Metric.constraints","htmlFilePath":null},"uid":"75a8c7c11806a4978f15014b82005e78","parentNodeUID":"80e4c21f35a87a3bc5f1f5332f4ab49f","path":"api/createState~Metric.constraints"},{"id":".dataPoints","title":"createState~Metric.dataPoints","summaryFields":["description"],"filePath":"lib/createState.js","loc":{"start":{"line":145,"column":2},"end":{"line":145,"column":42}},"properties":{"aliases":[],"description":"","id":"createState~Metric.dataPoints","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":145,"column":2},"end":{"line":145,"column":42}},"line":145,"mixinTargets":[],"name":"dataPoints","nodeInfo":{"type":"Unknown"},"receiver":"createState~Metric","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"createState~Metric","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":145},{"type":"property","string":"Data that the metric point should contain.\n\nA data point is a map between a name, something that describes the data in\nthe metric point, and a value.\n\nThe name is arbitrary and gives you a chance to rename application event\ndata when it makes sense to do so. The value can be generated in a number\nof ways as explained in [[DataPoint]].\n\nBelow are sample definitions:\n\n    {\n      dataPoints: [\n        // point data \"a\" will contain application event data \"aaa\"\n        {\n          name: 'a',\n          value: data => data.aaa\n        },\n        // point data \"b\" will be true or false based on whether\n        // the event data \"b\" is present\n        {\n          name: 'b',\n          value: DataPoint.flag('b')\n        }\n      ]\n    }\n\nPassing a `String` for a [[DataPoint]] will cause it to morph into one that\nsimply [[reflects | DataPoint.reflect]] the value found in the application\nevent data. This is merely a convenience property since it's what you may\nwant to do most of the time. For example:\n\n    {\n      dataPoints: [ 'a' ]\n    }\n\nThe metric point will contain a data point called \"a\" that is equal to\nwhatever \"a\" was set to in the event's data.","typeInfo":{"name":"dataPoints","description":"<p>Data that the metric point should contain.</p>\n<p>A data point is a map between a name, something that describes the data in\nthe metric point, and a value.</p>\n<p>The name is arbitrary and gives you a chance to rename application event\ndata when it makes sense to do so. The value can be generated in a number\nof ways as explained in <a href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\" class=\"mega-link--internal\">DataPoint</a>.</p>\n<p>Below are sample definitions:</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  dataPoints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token comment\" spellcheck=\"true\">// point data \"a\" will contain application event data \"aaa\"</span>\n    <span class=\"token punctuation\" >{</span>\n      name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'a'</span><span class=\"token punctuation\" >,</span>\n      value<span class=\"token punctuation\" >:</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span>aaa\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// point data \"b\" will be true or false based on whether</span>\n    <span class=\"token comment\" spellcheck=\"true\">// the event data \"b\" is present</span>\n    <span class=\"token punctuation\" >{</span>\n      name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'b'</span><span class=\"token punctuation\" >,</span>\n      value<span class=\"token punctuation\" >:</span> DataPoint<span class=\"token punctuation\" >.</span><span class=\"token function\" >flag</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'b'</span><span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre><p>Passing a <code>String</code> for a <a href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\" class=\"mega-link--internal\">DataPoint</a> will cause it to morph into one that\nsimply <a href=\"DataPoint.html#.reflect\" title=\"Reflect the value found at @path in the event&#39;s data.\" class=\"mega-link--internal\">reflects</a> the value found in the application\nevent data. This is merely a convenience property since it&#39;s what you may\nwant to do most of the time. For example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  dataPoints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'a'</span> <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre><p>The metric point will contain a data point called &quot;a&quot; that is equal to\nwhatever &quot;a&quot; was set to in the event&#39;s data.</p>\n","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":145}],"type":"Array"},"indices":{".dataPoints":0,"~Metric.dataPoints":1,"createState~Metric.dataPoints":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/createState.html#~Metric.dataPoints","anchor":"~Metric.dataPoints","htmlFilePath":null},"uid":"527cb1e5914fb4d185c339a0098d0cdc","parentNodeUID":"80e4c21f35a87a3bc5f1f5332f4ab49f","path":"api/createState~Metric.dataPoints"},{"id":"refine","title":"refine","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":36,"column":15},"end":{"line":71,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce metric points from a one or more application events and an optional\ncontext.</p>\n","id":"refine","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":36,"column":15},"end":{"line":71,"column":1}},"line":36,"mixinTargets":[],"name":"refine","nodeInfo":{"type":"Function","params":[null,{"name":"events"},{"name":"initialContext"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"state","type":{"name":"MetricState","html":"<a class=\"mega-link--internal\" href=\"createState.html#~MetricState\" title=\"The &quot;metric state&quot; is a transient structure to be used as input for [[refinement | refine]]. It contains a reference to the metrics to be used as well as the output of the process; the metric points and, optionally, the adjusted context.\">MetricState</a>"}},"line":36},{"type":"param","string":"","typeInfo":{"name":"events","type":{"name":"Array","elements":[{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"#~ApplicationEvent\">ApplicationEvent</a>"}],"html":"Array"}},"line":36},{"type":"param","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":36},{"type":"return","string":"The advanced state of the adapter which you can feed to a future\ncall to this routine.","typeInfo":{"name":"nextState","description":"<p>The advanced state of the adapter which you can feed to a future\ncall to this routine.</p>\n","type":{"name":"MetricState","html":"<a class=\"mega-link--internal\" href=\"createState.html#~MetricState\" title=\"The &quot;metric state&quot; is a transient structure to be used as input for [[refinement | refine]]. It contains a reference to the metrics to be used as well as the output of the process; the metric points and, optionally, the adjusted context.\">MetricState</a>"}},"line":36},{"type":"return","string":"The metrics in their advanced states after having (possibly) consumed\nthe events and produced their points.","typeInfo":{"name":"nextState.metrics","description":"<p>The metrics in their advanced states after having (possibly) consumed\nthe events and produced their points.</p>\n","type":{"name":"Array","elements":[{"name":"Metric","html":"<a class=\"mega-link--internal\" href=\"createState.html#~Metric\" title=\"The definition of a metric and the points it should produce.\">Metric</a>"}],"html":"Array"}},"line":36},{"type":"return","string":"The list of metric points you probably want to submit to your\nanalytics service.","typeInfo":{"name":"nextState.points","description":"<p>The list of metric points you probably want to submit to your\nanalytics service.</p>\n","type":{"name":"Array","elements":[{"name":"MetricPoint","html":"<a class=\"mega-link--internal\" href=\"#~MetricPoint\">MetricPoint</a>"}],"html":"Array"}},"line":36},{"type":"return","string":"The advanced context after having gone through all the metric\nconstraints.","typeInfo":{"name":"nextState.context","description":"<p>The advanced context after having gone through all the metric\nconstraints.</p>\n","type":{"name":"Any","html":"Any"}},"line":36}],"type":"Function"},"type":"Document","meta":{"href":"/api/refine.html","anchor":"refine","htmlFilePath":"api/refine.html"},"documents":[],"entities":["cb5a25b321a2e1190bbe3de013feef78","996220e21d18b7d3dc3ecacebca6560f"],"uid":"00e61af7f04ca590b8fe04c1544545bf","summary":"Produce metric points from a one or more application events and an optional context.","parentNodeUID":"55ba8448e702d245fd326c5aefb94095","path":"api/refine","indices":{"refine":1,"/lib/refine.js":1,"lib/refine.js":1}},{"id":"~ApplicationEvent","title":"refine~ApplicationEvent","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":36,"column":15},"end":{"line":71,"column":1}},"properties":{"aliases":["ApplicationEvent"],"description":"","id":"refine~ApplicationEvent","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":36,"column":15},"end":{"line":71,"column":1}},"line":36,"mixinTargets":[],"name":"ApplicationEvent","nodeInfo":{"type":"Function","params":[null,{"name":"events"},{"name":"initialContext"}]},"receiver":"refine","symbol":"~","tags":[{"type":"typedef","string":"","typeInfo":{"name":"refine~ApplicationEvent","description":null,"isOptional":null,"defaultValue":null,"type":{"0":"o","1":"b","2":"j","3":"e","4":"c","5":"t"}},"line":36},{"type":"alias","string":"","typeInfo":{"name":"ApplicationEvent","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":36},{"type":"property","string":"","typeInfo":{"name":"name","type":{"name":"String","html":"String"}},"line":36},{"type":"property","string":"","typeInfo":{"name":"data","type":{"name":"Any","nullable":true,"html":"Any"}},"line":36}],"type":"String"},"indices":{"~ApplicationEvent":0,"refine~ApplicationEvent":1,"ApplicationEvent":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/refine.html#~ApplicationEvent","anchor":"~ApplicationEvent","htmlFilePath":null},"uid":"cb5a25b321a2e1190bbe3de013feef78","parentNodeUID":"00e61af7f04ca590b8fe04c1544545bf","path":"api/refine~ApplicationEvent"},{"id":"~MetricPoint","title":"refine~MetricPoint","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":79,"column":29},"end":{"line":100,"column":2}},"properties":{"aliases":["MetricPoint"],"description":"","id":"refine~MetricPoint","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":79,"column":29},"end":{"line":100,"column":2}},"line":79,"mixinTargets":[],"name":"MetricPoint","nodeInfo":{"type":"Function","params":[{"name":"metric"}]},"receiver":"refine","symbol":"~","tags":[{"type":"typedef","string":"","typeInfo":{"name":"refine~MetricPoint","description":null,"isOptional":null,"defaultValue":null,"type":{"0":"o","1":"b","2":"j","3":"e","4":"c","5":"t"}},"line":79},{"type":"type","string":"","typeInfo":{"type":{"name":"Object"}},"line":79},{"type":"alias","string":"","typeInfo":{"name":"MetricPoint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":79}],"type":"Object"},"indices":{"~MetricPoint":0,"refine~MetricPoint":1,"MetricPoint":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/refine.html#~MetricPoint","anchor":"~MetricPoint","htmlFilePath":null},"uid":"996220e21d18b7d3dc3ecacebca6560f","documents":[],"entities":["8eaea938bc030fe3e98ad81111019984","1d43d14256885a5301719a8145cc48c9","75d84e47f0d0e6436818b730a48e9e21"],"parentNodeUID":"00e61af7f04ca590b8fe04c1544545bf","path":"api/refine~MetricPoint"},{"id":".name","title":"refine~MetricPoint.name","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":19}},"properties":{"aliases":[],"description":"","id":"refine~MetricPoint.name","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":19}},"line":84,"mixinTargets":[],"name":"name","nodeInfo":{"type":"Unknown"},"receiver":"refine~MetricPoint","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"refine~MetricPoint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":84},{"type":"property","string":"","typeInfo":{"name":"name","type":{"name":"String","html":"String"}},"line":84}],"type":"String"},"indices":{".name":0,"~MetricPoint.name":1,"refine~MetricPoint.name":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/refine.html#~MetricPoint.name","anchor":"~MetricPoint.name","htmlFilePath":null},"uid":"8eaea938bc030fe3e98ad81111019984","parentNodeUID":"996220e21d18b7d3dc3ecacebca6560f","path":"api/refine~MetricPoint.name"},{"id":".data","title":"refine~MetricPoint.data","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":6}},"properties":{"aliases":[],"description":"","id":"refine~MetricPoint.data","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":6}},"line":90,"mixinTargets":[],"name":"data","nodeInfo":{"type":"Function","params":[null]},"receiver":"refine~MetricPoint","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"refine~MetricPoint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":90},{"type":"property","string":"","typeInfo":{"name":"data","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":90}],"type":"Array"},"indices":{".data":0,"~MetricPoint.data":1,"refine~MetricPoint.data":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/refine.html#~MetricPoint.data","anchor":"~MetricPoint.data","htmlFilePath":null},"uid":"1d43d14256885a5301719a8145cc48c9","parentNodeUID":"996220e21d18b7d3dc3ecacebca6560f","path":"api/refine~MetricPoint.data"},{"id":".source","title":"refine~MetricPoint.source","summaryFields":["description"],"filePath":"lib/refine.js","loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":25}},"properties":{"aliases":[],"description":"","id":"refine~MetricPoint.source","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":25}},"line":99,"mixinTargets":[],"name":"source","nodeInfo":{"type":"Object","properties":[{"key":"event"},{"key":"data"}]},"receiver":"refine~MetricPoint","symbol":".","tags":[{"type":"memberOf","string":"","typeInfo":{"name":"refine~MetricPoint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":99},{"type":"property","string":"","typeInfo":{"name":"source","type":{"name":"Object"}},"line":99},{"type":"property","string":"","typeInfo":{"name":"source.event","type":{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"#~ApplicationEvent\">ApplicationEvent</a>"}},"line":99},{"type":"property","string":"","typeInfo":{"name":"source.data","type":{"name":"Object","nullable":true}},"line":99}],"type":"Object"},"indices":{".source":0,"~MetricPoint.source":1,"refine~MetricPoint.source":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/refine.html#~MetricPoint.source","anchor":"~MetricPoint.source","htmlFilePath":null},"uid":"75d84e47f0d0e6436818b730a48e9e21","parentNodeUID":"996220e21d18b7d3dc3ecacebca6560f","path":"api/refine~MetricPoint.source"},{"id":"api--auxiliary","name":"megadoc-plugin-js","title":"FMA API","meta":{"href":"/api.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::ModuleIndex"},{"name":"JS::ModuleBody"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]}]},{"match":{"by":"type","on":"Namespace"},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]},{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::Namespace"},{"name":"Core::Content"}]}]}],"anchor":"api--auxiliary","htmlFilePath":"api.html"},"config":{"id":"js","baseURL":"/api","title":"FMA API","source":["**/*.js"],"exclude":null,"useDirAsNamespace":true,"inferModuleIdFromFileName":true,"inferNamespaces":true,"analyzeNode":null,"customTags":{},"showSourcePaths":false,"verbose":false,"alias":{},"parse":null,"parserOptions":null,"namespaceDirMap":{},"moduleMap":{},"namedReturnTags":true,"builtInTypes":[],"docstringProcessors":[],"tagProcessors":[],"tagAliases":{},"linkToNamespacesInBrowser":false,"hideBlankParameters":true,"hideBlankReturns":true,"hidePrivateSymbols":true,"expandReturnedFunctionSignature":true,"showTypeDefsInBrowser":false,"showTypeDefPropertiesInBrowser":true,"expandReturnedFunctionSignatures":true},"indexFields":["$uid","$filePath","aliases"],"documents":["364993eec6d62e447af4b6a8a4a85ebc","f3359ee01171fd79eaa4da470db1d77e","53bc01949820d04a62c8f6f5822216a3"],"type":"Namespace","symbol":"/","uid":"aa4dc33a0e310ec27c9e757c16cf1a8b","path":"api--auxiliary","indices":{}},{"id":"DataPoint","title":"DataPoint","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":25}},"symbol":"","properties":{"aliases":[],"description":"<p>Functions for storing data from application events in metric points. These\nfunctions are utilized in the <a href=\"createState.html\" title=\"Create a blank state for [[refinement | refine]].\" class=\"mega-link--internal\">definition of metrics</a>.</p>\n<p>To perform custom treatment of a certain data point (aka a reducer) you can\nimplement the <code>value</code> function with the following signature:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >:</span> Object<span class=\"token operator\" >?</span><span class=\"token punctuation\" >,</span> context<span class=\"token punctuation\" >:</span> Any<span class=\"token operator\" >?</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >:</span> Any</code></pre><p>Inside such a reducer you have access to both the application event&#39;s data as\nwell as the current context so that you can refine or compute the data any\nway you wish.</p>\n","id":"DataPoint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":25}},"line":19,"mixinTargets":[],"name":"DataPoint","nodeInfo":{"type":"Object"},"symbol":null,"tags":[{"type":"module","string":"Functions for storing data from application events in metric points. These\nfunctions are utilized in the [[definition of metrics | createState]].\n\nTo perform custom treatment of a certain data point (aka a reducer) you can\nimplement the `value` function with the following signature:\n\n    function(data: Object?, context: Any?): Any\n\nInside such a reducer you have access to both the application event's data as\nwell as the current context so that you can refine or compute the data any\nway you wish.","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":19}],"type":"Object"},"type":"Document","meta":{"href":"/api/DataPoint.html","anchor":"DataPoint","htmlFilePath":"api/DataPoint.html"},"documents":[],"entities":["09c60fa07535e409acf19a739f5f02ec","9de1a4c13d2b47e03e9b9e70ce0425bf","66ef9d6d79aa2896aa0bc6c85f45f0ba","e77630ba713a434d1149eec6c7779a30","cb0c836c2e299b7b3f4d516288890285","5ac0cb2cb17d3dd1b6e2a6389f13b99b","9c9182712bb3fcdc890a429586d0c300"],"uid":"364993eec6d62e447af4b6a8a4a85ebc","summary":"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].","parentNodeUID":"aa4dc33a0e310ec27c9e757c16cf1a8b","path":"api--auxiliary/DataPoint","indices":{"DataPoint":1,"/lib/DataPoint.js":1,"lib/DataPoint.js":1}},{"id":".reflect","title":"DataPoint.reflect","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"properties":{"aliases":[],"description":"<p>Reflect the value found at @path in the event&#39;s data.</p>\n<p>This is the default data point reducer.</p>\n","id":"DataPoint.reflect","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"line":31,"mixinTargets":[],"name":"reflect","nodeInfo":{"type":"Function","params":[{"name":"path"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"param","string":"The property path of the value to reflect.","typeInfo":{"name":"path","description":"<p>The property path of the value to reflect.</p>\n","type":{"name":"Union","elements":[{"name":"String","html":"String"},{"name":"Array","elements":[{"name":"String","html":"String"}],"html":"Array"}]}},"line":31},{"type":"return","string":"","typeInfo":{"type":{"name":"Function","params":[{"name":"Object"}],"returnType":{"name":"Any","html":"Any"}}},"line":31}],"type":"Function"},"indices":{".reflect":0,"DataPoint.reflect":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.reflect","anchor":".reflect","htmlFilePath":null},"uid":"09c60fa07535e409acf19a739f5f02ec","summary":"Reflect the value found at @path in the event's data.","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.reflect"},{"id":".reflectFromContext","title":"DataPoint.reflectFromContext","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":78}},"properties":{"aliases":[],"description":"<p>Reflect the value found at @path in the provided context.</p>\n","id":"DataPoint.reflectFromContext","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":78}},"line":41,"mixinTargets":[],"name":"reflectFromContext","nodeInfo":{"type":"Function","params":[{"name":"path"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"param","string":"The property path of the value to reflect.","typeInfo":{"name":"path","description":"<p>The property path of the value to reflect.</p>\n","type":{"name":"Union","elements":[{"name":"String","html":"String"},{"name":"Array","elements":[{"name":"String","html":"String"}],"html":"Array"}]}},"line":41},{"type":"return","string":"","typeInfo":{"type":{"name":"Function","params":[{"name":"Object"}],"returnType":{"name":"Any","html":"Any"}}},"line":41}],"type":"Function"},"indices":{".reflectFromContext":0,"DataPoint.reflectFromContext":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.reflectFromContext","anchor":".reflectFromContext","htmlFilePath":null},"uid":"9de1a4c13d2b47e03e9b9e70ce0425bf","summary":"Reflect the value found at @path in the provided context.","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.reflectFromContext"},{"id":".always","title":"DataPoint.always","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":39}},"properties":{"aliases":[],"description":"<p>Always return the specified value regardless of the application event data.</p>\n<p>For example, let&#39;s assume we have a UI interaction that can be triggered\nusing either the mouse or the keyboard and that each kind of interaction\ntriggers a <strong>distinct</strong> event, but we want the metric point to store\ninformation anyway:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >const</span> metrics <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span>\n  <span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Search box opened'</span><span class=\"token punctuation\" >,</span>\n    events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'search-box/opened-using-mouse'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    dataPoints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n      <span class=\"token punctuation\" >{</span>\n        name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'usingMouse'</span><span class=\"token punctuation\" >,</span>\n        DataPoint<span class=\"token punctuation\" >.</span><span class=\"token function\" >always</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >]</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Search box opened'</span><span class=\"token punctuation\" >,</span>\n    events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'search-box/opened-using-keyboard'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    dataPoints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n      <span class=\"token punctuation\" >{</span>\n        name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'usingKeyboard'</span><span class=\"token punctuation\" >,</span>\n        DataPoint<span class=\"token punctuation\" >.</span><span class=\"token function\" >always</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >]</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >]</span></code></pre>","id":"DataPoint.always","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":39}},"line":77,"mixinTargets":[],"name":"always","nodeInfo":{"type":"Function","params":[{"name":"value"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"value","type":{"name":"Any","html":"Any"}},"line":77},{"type":"return","string":"","typeInfo":{"type":{"name":"Function","returnType":{"name":"Any","html":"Any"}}},"line":77}],"type":"Function"},"indices":{".always":0,"DataPoint.always":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.always","anchor":".always","htmlFilePath":null},"uid":"66ef9d6d79aa2896aa0bc6c85f45f0ba","summary":"Always return the specified value regardless of the application event data.","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.always"},{"id":".flag","title":"DataPoint.flag","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":43}},"properties":{"aliases":[],"description":"<p>Store whether a value in the application event data was present at all,\nregardless of its value (it has to evaluate to <code>true</code>.)</p>\n<p>This coercion is useful in cases when you&#39;re interested only in whether a\ncertain value is set. For example, let&#39;s assume we have a UI filtering\ncontrol that lets the user filter results by Name and Date of Birth. What we\nwant the metric point to convey is whether they are using the name filter,\nthe date of birth filter, or both. The values are irrelevant.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >const</span> metrics <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span>\n  <span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Filtered results'</span><span class=\"token punctuation\" >,</span>\n    events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'results-filtered'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    dataPoints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n      <span class=\"token punctuation\" >{</span>\n        name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'byName'</span><span class=\"token punctuation\" >,</span>\n        value<span class=\"token punctuation\" >:</span> DataPoint<span class=\"token punctuation\" >.</span><span class=\"token function\" >flag</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'name'</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token punctuation\" >{</span>\n        name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'byDateOfBirth'</span><span class=\"token punctuation\" >,</span>\n        value<span class=\"token punctuation\" >:</span> DataPoint<span class=\"token punctuation\" >.</span><span class=\"token function\" >flag</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'dateOfBirth'</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >]</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >]</span>\n\n<span class=\"token keyword\" >const</span> event1 <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'results-filtered'</span><span class=\"token punctuation\" >,</span> data<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'a'</span> <span class=\"token punctuation\" >}</span> <span class=\"token punctuation\" >}</span>\n<span class=\"token comment\" spellcheck=\"true\">// => { byName: true, byDateOfBirth: false }</span>\n\n<span class=\"token keyword\" >const</span> event2 <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'results-filtered'</span><span class=\"token punctuation\" >,</span> data<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >null</span> <span class=\"token punctuation\" >}</span> <span class=\"token punctuation\" >}</span>\n<span class=\"token comment\" spellcheck=\"true\">// => { byName: false, byDateOfBirth: false }</span></code></pre>","id":"DataPoint.flag","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":43}},"line":118,"mixinTargets":[],"name":"flag","nodeInfo":{"type":"Function","params":[{"name":"key"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"param","string":"The property key of the value to test.","typeInfo":{"name":"key","description":"<p>The property key of the value to test.</p>\n","type":{"name":"String","html":"String"}},"line":118},{"type":"return","string":"","typeInfo":{"type":{"name":"Function","params":[{"name":"Object"}],"returnType":{"name":"Boolean","html":"Boolean"}}},"line":118}],"type":"Function"},"indices":{".flag":0,"DataPoint.flag":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.flag","anchor":".flag","htmlFilePath":null},"uid":"e77630ba713a434d1149eec6c7779a30","summary":"Store whether a value in the application event data was present at all, regardless of its value (it has to evaluate to true.)","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.flag"},{"id":".of","title":"DataPoint.of","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":121,"column":0},"end":{"line":141,"column":1}},"properties":{"aliases":[],"description":"","id":"DataPoint.of","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":121,"column":0},"end":{"line":141,"column":1}},"line":121,"mixinTargets":[],"name":"of","nodeInfo":{"type":"Function","params":[{"name":"spec"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"private","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":121}],"type":"Function"},"indices":{".of":0,"DataPoint.of":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.of","anchor":".of","htmlFilePath":null},"uid":"cb0c836c2e299b7b3f4d516288890285","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.of"},{"id":".extract","title":"DataPoint.extract","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":144,"column":0},"end":{"line":154,"column":1}},"properties":{"aliases":[],"description":"","id":"DataPoint.extract","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":144,"column":0},"end":{"line":154,"column":1}},"line":144,"mixinTargets":[],"name":"extract","nodeInfo":{"type":"Function","params":[{"name":"event"},{"name":"context"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"private","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":144}],"type":"Function"},"indices":{".extract":0,"DataPoint.extract":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.extract","anchor":".extract","htmlFilePath":null},"uid":"5ac0cb2cb17d3dd1b6e2a6389f13b99b","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.extract"},{"id":".toMap","title":"DataPoint.toMap","summaryFields":["description"],"filePath":"lib/DataPoint.js","loc":{"start":{"line":157,"column":0},"end":{"line":161,"column":6}},"properties":{"aliases":[],"description":"","id":"DataPoint.toMap","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":157,"column":0},"end":{"line":161,"column":6}},"line":157,"mixinTargets":[],"name":"toMap","nodeInfo":{"type":"Function","params":[{"name":"dataPoints"}]},"receiver":"DataPoint","symbol":".","tags":[{"type":"private","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":157}],"type":"Function"},"indices":{".toMap":0,"DataPoint.toMap":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/DataPoint.html#.toMap","anchor":".toMap","htmlFilePath":null},"uid":"9c9182712bb3fcdc890a429586d0c300","parentNodeUID":"364993eec6d62e447af4b6a8a4a85ebc","path":"api--auxiliary/DataPoint.toMap"},{"id":"Period","title":"Period","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":22}},"symbol":"","properties":{"aliases":[],"description":"<p>Functions for representing and treating periods of time.</p>\n","id":"Period","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":22}},"line":22,"mixinTargets":[],"name":"Period","nodeInfo":{"type":"Object"},"symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":22},{"type":"preserveOrder","string":"Functions for representing and treating periods of time.","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":22}],"type":"Object"},"type":"Document","meta":{"href":"/api/Period.html","anchor":"Period","htmlFilePath":"api/Period.html"},"documents":[],"entities":["3612a557eb930def4e1fc82d52d9fdd3","e95fe1d8b05e78873ad9a53a4b10e850","e13ffe0026bbe53286941125a86b4598","b5e52f73089c760ed6b3018f79c6cc34","60bf72cf1ecb4eead023949c7a42c20a","1aae4b7e79afd5a8e250cc0d8fcc17b8","825bf6ea5ae18c0e11450342b6d062eb"],"uid":"f3359ee01171fd79eaa4da470db1d77e","summary":"Functions for representing and treating periods of time.","parentNodeUID":"aa4dc33a0e310ec27c9e757c16cf1a8b","path":"api--auxiliary/Period","indices":{"Period":1,"/lib/Period.js":1,"lib/Period.js":1}},{"id":".days","title":"Period.days","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"properties":{"aliases":[],"description":"<p>Create a period of a number of days.</p>\n","id":"Period.days","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"line":30,"mixinTargets":[],"name":"days","nodeInfo":{"type":"Function","params":[{"name":"count"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"count","type":{"name":"Number","html":"Number"}},"line":30},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":30}],"type":"Function"},"indices":{".days":0,"Period.days":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.days","anchor":".days","htmlFilePath":null},"uid":"3612a557eb930def4e1fc82d52d9fdd3","summary":"Create a period of a number of days.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.days"},{"id":".hours","title":"Period.hours","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"properties":{"aliases":[],"description":"<p>Create a period of a number of hours.</p>\n","id":"Period.hours","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"line":38,"mixinTargets":[],"name":"hours","nodeInfo":{"type":"Function","params":[{"name":"count"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"count","type":{"name":"Number","html":"Number"}},"line":38},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":38}],"type":"Function"},"indices":{".hours":0,"Period.hours":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.hours","anchor":".hours","htmlFilePath":null},"uid":"e95fe1d8b05e78873ad9a53a4b10e850","summary":"Create a period of a number of hours.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.hours"},{"id":".minutes","title":"Period.minutes","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":54}},"properties":{"aliases":[],"description":"<p>Create a period of a number of minutes.</p>\n","id":"Period.minutes","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":54}},"line":46,"mixinTargets":[],"name":"minutes","nodeInfo":{"type":"Function","params":[{"name":"count"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"count","type":{"name":"Number","html":"Number"}},"line":46},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":46}],"type":"Function"},"indices":{".minutes":0,"Period.minutes":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.minutes","anchor":".minutes","htmlFilePath":null},"uid":"e13ffe0026bbe53286941125a86b4598","summary":"Create a period of a number of minutes.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.minutes"},{"id":".seconds","title":"Period.seconds","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":54}},"properties":{"aliases":[],"description":"<p>Create a period of a number of seconds.</p>\n","id":"Period.seconds","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":54}},"line":54,"mixinTargets":[],"name":"seconds","nodeInfo":{"type":"Function","params":[{"name":"count"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"count","type":{"name":"Number","html":"Number"}},"line":54},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":54}],"type":"Function"},"indices":{".seconds":0,"Period.seconds":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.seconds","anchor":".seconds","htmlFilePath":null},"uid":"b5e52f73089c760ed6b3018f79c6cc34","summary":"Create a period of a number of seconds.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.seconds"},{"id":".isPeriod","title":"Period.isPeriod","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":62,"column":0},"end":{"line":64,"column":1}},"properties":{"aliases":[],"description":"<p>Test whether a given value is a period object.</p>\n","id":"Period.isPeriod","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":62,"column":0},"end":{"line":64,"column":1}},"line":62,"mixinTargets":[],"name":"isPeriod","nodeInfo":{"type":"Function","params":[{"name":"period"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"x","type":{"name":"Any","html":"Any"}},"line":62},{"type":"return","string":"","typeInfo":{"type":{"name":"Boolean","html":"Boolean"}},"line":62}],"type":"Function"},"indices":{".isPeriod":0,"Period.isPeriod":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.isPeriod","anchor":".isPeriod","htmlFilePath":null},"uid":"60bf72cf1ecb4eead023949c7a42c20a","summary":"Test whether a given value is a period object.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.isPeriod"},{"id":".hasElapsed","title":"Period.hasElapsed","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":75,"column":0},"end":{"line":88,"column":1}},"properties":{"aliases":[],"description":"<p>Test whether a given period has elapsed.</p>\n","id":"Period.hasElapsed","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":75,"column":0},"end":{"line":88,"column":1}},"line":75,"mixinTargets":[],"name":"hasElapsed","nodeInfo":{"type":"Function","params":[{"name":"period"},{"name":"when"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"period","type":{"name":"Object"}},"line":75},{"type":"param","string":"The current time as far as the test goes","typeInfo":{"name":"when","description":"<p>The current time as far as the test goes</p>\n","type":{"name":"Date","html":"Date"}},"line":75},{"type":"return","string":"","typeInfo":{"type":{"name":"Boolean","html":"Boolean"}},"line":75}],"type":"Function"},"indices":{".hasElapsed":0,"Period.hasElapsed":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.hasElapsed","anchor":".hasElapsed","htmlFilePath":null},"uid":"1aae4b7e79afd5a8e250cc0d8fcc17b8","summary":"Test whether a given period has elapsed.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.hasElapsed"},{"id":".toMilliseconds","title":"Period.toMilliseconds","summaryFields":["description"],"filePath":"lib/Period.js","loc":{"start":{"line":96,"column":0},"end":{"line":115,"column":1}},"properties":{"aliases":[],"description":"<p>Convert a period object to the number of milliseconds it represents.</p>\n","id":"Period.toMilliseconds","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":96,"column":0},"end":{"line":115,"column":1}},"line":96,"mixinTargets":[],"name":"toMilliseconds","nodeInfo":{"type":"Function","params":[{"name":"period"}]},"receiver":"Period","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"period","type":{"name":"Object"}},"line":96},{"type":"return","string":"","typeInfo":{"type":{"name":"Number","html":"Number"}},"line":96}],"type":"Function"},"indices":{".toMilliseconds":0,"Period.toMilliseconds":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Period.html#.toMilliseconds","anchor":".toMilliseconds","htmlFilePath":null},"uid":"825bf6ea5ae18c0e11450342b6d062eb","summary":"Convert a period object to the number of milliseconds it represents.","parentNodeUID":"f3359ee01171fd79eaa4da470db1d77e","path":"api--auxiliary/Period.toMilliseconds"},{"id":"Tuple","title":"Tuple","summaryFields":["description"],"filePath":"lib/Tuple.js","loc":{"start":{"line":12,"column":14},"end":{"line":45,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>A construct for representing a pair of values.</p>\n<p>A tuple is used in functions such as <a href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\" class=\"mega-link--internal\">constraint hooks</a> where\nyou may want to return more than one value to FMA. The advantage of using a\ntuple over a regular array is that the values can be anything (including\narrays) and allow FMA to treat it uniformly.</p>\n","id":"Tuple","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":12,"column":14},"end":{"line":45,"column":1}},"line":12,"mixinTargets":[],"name":"Tuple","nodeInfo":{"type":"Object","properties":[{"key":"of","value":{"type":"Function","params":[{"name":"a"},{"name":"b"}]}},{"key":"is","value":{"type":"Function","params":[{"name":"x"}]}},{"key":"firstOf","value":{"type":"Function","params":[{"name":"x"}]}},{"key":"secondOf","value":{"type":"Function","params":[{"name":"x"}]}}]},"symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":"Tuple","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":12},{"type":"preserveOrder","string":"A construct for representing a pair of values.\n\nA tuple is used in functions such as [[constraint hooks | Constraint]] where\nyou may want to return more than one value to FMA. The advantage of using a\ntuple over a regular array is that the values can be anything (including\narrays) and allow FMA to treat it uniformly.","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":12}],"type":"Object"},"type":"Document","meta":{"href":"/api/Tuple.html","anchor":"Tuple","htmlFilePath":"api/Tuple.html"},"documents":[],"entities":["6a09f4e88df8260b72352ebcb3d44d92","0d2d551158100b1a3a3b1a9a27de47f9","61431b7ee4fa7ea23d6e227d77fc757f","1daf2a4c289ed7abaffbd7f35f12615d"],"uid":"53bc01949820d04a62c8f6f5822216a3","summary":"A construct for representing a pair of values.","parentNodeUID":"aa4dc33a0e310ec27c9e757c16cf1a8b","path":"api--auxiliary/Tuple","indices":{"Tuple":1,"/lib/Tuple.js":1,"lib/Tuple.js":1}},{"id":".of","title":"Tuple.of","summaryFields":["description"],"filePath":"lib/Tuple.js","loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":45}},"properties":{"aliases":[],"description":"<p>Create a tuple of a pair of values.</p>\n","id":"Tuple.of","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":45}},"line":21,"mixinTargets":[],"name":"of","nodeInfo":{"type":"Function","params":[{"name":"a"},{"name":"b"}]},"receiver":"Tuple","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"a","type":{"name":"Any","html":"Any"}},"line":21},{"type":"param","string":"","typeInfo":{"name":"b","type":{"name":"Any","html":"Any"}},"line":21},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":21}],"type":"Function"},"indices":{".of":0,"Tuple.of":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Tuple.html#.of","anchor":".of","htmlFilePath":null},"uid":"6a09f4e88df8260b72352ebcb3d44d92","summary":"Create a tuple of a pair of values.","parentNodeUID":"53bc01949820d04a62c8f6f5822216a3","path":"api--auxiliary/Tuple.of"},{"id":".is","title":"Tuple.is","summaryFields":["description"],"filePath":"lib/Tuple.js","loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":75}},"properties":{"aliases":[],"description":"<p>Test whether a given value is a tuple record.</p>\n","id":"Tuple.is","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":75}},"line":28,"mixinTargets":[],"name":"is","nodeInfo":{"type":"Function","params":[{"name":"x"}]},"receiver":"Tuple","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"x","type":{"name":"Any","html":"Any"}},"line":28},{"type":"return","string":"","typeInfo":{"type":{"name":"Boolean","html":"Boolean"}},"line":28}],"type":"Function"},"indices":{".is":0,"Tuple.is":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Tuple.html#.is","anchor":".is","htmlFilePath":null},"uid":"0d2d551158100b1a3a3b1a9a27de47f9","summary":"Test whether a given value is a tuple record.","parentNodeUID":"53bc01949820d04a62c8f6f5822216a3","path":"api--auxiliary/Tuple.is"},{"id":".firstOf","title":"Tuple.firstOf","summaryFields":["description"],"filePath":"lib/Tuple.js","loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":25}},"properties":{"aliases":[],"description":"<p>Retrieve the first value from a tuple record.</p>\n","id":"Tuple.firstOf","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":25}},"line":36,"mixinTargets":[],"name":"firstOf","nodeInfo":{"type":"Function","params":[{"name":"x"}]},"receiver":"Tuple","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"x","type":{"name":"Object"}},"line":36},{"type":"return","string":"","typeInfo":{"type":{"name":"Any","html":"Any"}},"line":36}],"type":"Function"},"indices":{".firstOf":0,"Tuple.firstOf":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Tuple.html#.firstOf","anchor":".firstOf","htmlFilePath":null},"uid":"61431b7ee4fa7ea23d6e227d77fc757f","summary":"Retrieve the first value from a tuple record.","parentNodeUID":"53bc01949820d04a62c8f6f5822216a3","path":"api--auxiliary/Tuple.firstOf"},{"id":".secondOf","title":"Tuple.secondOf","summaryFields":["description"],"filePath":"lib/Tuple.js","loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":27}},"properties":{"aliases":[],"description":"<p>Retrieve the second value from a tuple record.</p>\n","id":"Tuple.secondOf","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":27}},"line":44,"mixinTargets":[],"name":"secondOf","nodeInfo":{"type":"Function","params":[{"name":"x"}]},"receiver":"Tuple","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"x","type":{"name":"Object"}},"line":44},{"type":"return","string":"","typeInfo":{"type":{"name":"Any","html":"Any"}},"line":44}],"type":"Function"},"indices":{".secondOf":0,"Tuple.secondOf":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Tuple.html#.secondOf","anchor":".secondOf","htmlFilePath":null},"uid":"1daf2a4c289ed7abaffbd7f35f12615d","summary":"Retrieve the second value from a tuple record.","parentNodeUID":"53bc01949820d04a62c8f6f5822216a3","path":"api--auxiliary/Tuple.secondOf"},{"id":"api--constraints","name":"megadoc-plugin-js","title":"FMA API","meta":{"href":"/api.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::ModuleIndex"},{"name":"JS::ModuleBody"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]}]},{"match":{"by":"type","on":"Namespace"},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]},{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::Namespace"},{"name":"Core::Content"}]}]}],"anchor":"api--constraints","htmlFilePath":"api.html"},"config":{"id":"js","baseURL":"/api","title":"FMA API","source":["**/*.js"],"exclude":null,"useDirAsNamespace":true,"inferModuleIdFromFileName":true,"inferNamespaces":true,"analyzeNode":null,"customTags":{},"showSourcePaths":false,"verbose":false,"alias":{},"parse":null,"parserOptions":null,"namespaceDirMap":{},"moduleMap":{},"namedReturnTags":true,"builtInTypes":[],"docstringProcessors":[],"tagProcessors":[],"tagAliases":{},"linkToNamespacesInBrowser":false,"hideBlankParameters":true,"hideBlankReturns":true,"hidePrivateSymbols":true,"expandReturnedFunctionSignature":true,"showTypeDefsInBrowser":false,"showTypeDefPropertiesInBrowser":true,"expandReturnedFunctionSignatures":true},"indexFields":["$uid","$filePath","aliases"],"documents":["8695b0089cf13ce49cf0c3d392534918","87d30338731bc3d397afe55ac52dc6d3","21c05d559cadfc1de531b7b3fc221903","8469a8b971d56fe77f04eeed8e718244","9e5479651680a98dd51cec850d614e02","e7644e2c738f914e304576c3722e073f","e3e4589bd681b50ef742c5c400a78101","b00f1e960a154ab3ecf1f2f3ff03a4a9"],"type":"Namespace","symbol":"/","uid":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints","indices":{}},{"id":"FrequencyConstraint","title":"FrequencyConstraint","summaryFields":["description"],"filePath":"lib/constraints/FrequencyConstraint.js","loc":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce a point only after a number of events have been triggered (and\nconsumed). This constraint is mostly useful in conjunction with others.</p>\n<p>For an example application that allows login by UID but not by email, we&#39;re\nled to believe it&#39;s confusing the users. We want to track if people are\nrepeatedly failing to login due to invalid UIDs.</p>\n<p>One way to capture that is by checking if they fail to login 3 times in 90\nseconds.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> FrequencyConstraint<span class=\"token punctuation\" >,</span> TypeConstraint <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token keyword\" >const</span> metric <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >{</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >TypeConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span> <span class=\"token string\" >'login-failed--invalid-uid'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 3 times</span>\n    <span class=\"token function\" >FrequencyConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >3</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// within 30 seconds of each other</span>\n    <span class=\"token function\" >ProximityConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      period<span class=\"token punctuation\" >:</span> Period<span class=\"token punctuation\" >.</span><span class=\"token function\" >seconds</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >30</span><span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"FrequencyConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"line":35,"mixinTargets":[],"name":"FrequencyConstraint","nodeInfo":{"type":"Function","params":[{"name":"rate"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"rate","type":{"name":"Number","html":"Number"}},"line":35},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":35}],"type":"Function"},"type":"Document","meta":{"href":"/api/FrequencyConstraint.html","anchor":"FrequencyConstraint","htmlFilePath":"api/FrequencyConstraint.html"},"documents":[],"entities":[],"uid":"8695b0089cf13ce49cf0c3d392534918","summary":"Produce a point only after a number of events have been triggered (and consumed). This constraint is mostly useful in conjunction with others.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/FrequencyConstraint","indices":{"FrequencyConstraint":1,"/lib/constraints/FrequencyConstraint.js":1,"lib/constraints/FrequencyConstraint.js":1}},{"id":"Constraint","title":"Constraint","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":83,"column":0},"end":{"line":177,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>The interface of a constraint and its available hooks.</p>\n<p>Consult the <a href=\"../index.html#constraints\" class=\"mega-link--internal\">README</a> for the definition of a\nconstraint, this part will only be concerned with implementing one.</p>\n<p>A constraint is implemented through a series of functions applied to an\nobject called its state. The state has to capture whatever data is necessary\nto apply the constraint.</p>\n<p>The implementation specifies a starting state in the <a href=\"#.getInitialState\" class=\"mega-link--internal\">.getInitialState</a> hook which will be created for every metric that utilizes\nthe constraint, and other hooks can adjust the state as needed.</p>\n<p>During <a href=\"refine.html\" title=\"Produce metric points from a one or more application events and an optional context.\" class=\"mega-link--internal\">refinement</a>, we say that an <a href=\"refine.html#~ApplicationEvent\" class=\"mega-link--internal\">event</a>\nis &quot;consumed&quot; when all the conditions of the defined constraints pass. Once\nan event is successfully consumed, we proceed to producing a <a href=\"refine.html#~MetricPoint\" class=\"mega-link--internal\">metric point</a>.</p>\n<p>A constraint allows you to control both stages of the process.</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"state-and-context-advancement\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#state-and-context-advancement\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">State and context advancement</span>\n</h3><p>The state and the <a href=\"../index.html#application-context\" class=\"mega-link--internal\">application context</a> can\nboth be &quot;advanced&quot; to a different version at the two distinct stages\ndescribed earlier: upon <a href=\"#.eventWasConsumed\" title=\"The return value of this hook will be treated as the next state of the constraint. To leave the state without modification, simply return the first parameter or leave the hook undefined.\" class=\"mega-link--internal\">consuming an event</a> and later\nupon <a href=\"#.pointWasProduced\" title=\"Similar to [[.eventWasConsumed | .eventWasConsumed]] but triggered after a point has been produced. Commonly you may implement this hook to reset state, partially or otherwise.\" class=\"mega-link--internal\">producing a point</a>.</p>\n<p>When a constraint blocks an event from being consumed, <strong>NO changes to either\nthe state or the context will be made during refinement.</strong></p>\n<p>When a constraint blocks a point from being produced, <strong>all side-effects\ncaused by the <a href=\"#.eventWasConsumed\" title=\"The return value of this hook will be treated as the next state of the constraint. To leave the state without modification, simply return the first parameter or leave the hook undefined.\" class=\"mega-link--internal\">Constraint.eventWasConsumed</a> hook from both the current and the other\nconstraints on the metric will persist.</strong></p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"example\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#example\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Example</span>\n</h3><p>Let&#39;s assume we need an event to be triggered 3 times for a point to be\nproduced. A sample implementation could be:</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'ThrottleConstraint'</span><span class=\"token punctuation\" >,</span>\n\n  getInitialState<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> count<span class=\"token punctuation\" >:</span> <span class=\"token number\" >0</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n\n  shouldConsumeEvent<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token boolean\" >true</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// increment the counter</span>\n  eventWasConsumed<span class=\"token punctuation\" >:</span> state <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> count<span class=\"token punctuation\" >:</span> state<span class=\"token punctuation\" >.</span>count <span class=\"token operator\" >+</span> <span class=\"token number\" >1</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// did we collect 3 events yet?</span>\n  shouldProducePoint<span class=\"token punctuation\" >:</span> state <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> state<span class=\"token punctuation\" >.</span>count <span class=\"token operator\" >===</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// we did collect 3 events by this point, reset the counter</span>\n  pointWasProduced<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> count<span class=\"token punctuation\" >:</span> <span class=\"token number\" >0</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span></code></pre>\n<h3 class=\"anchorable-heading\">\n  <a name=\"configuration\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#configuration\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Configuration</span>\n</h3><p>If it is possible for your constraint logic to be customized, define it as a\nfunction and have the user instantiate it with the parameters. For example,\nlet&#39;s revisit our sample implementation of the <code>ThrottleConstraint</code> to allow\nthe user to specify the rate:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >function</span> <span class=\"token function\" >ThrottleConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> rate <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >invariant</span><span class=\"token punctuation\" >(</span>rate <span class=\"token operator\" >></span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >\"Throttle rate must be a positive number!\"</span><span class=\"token punctuation\" >)</span>\n\n  <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// ...</span>\n    shouldProducePoint<span class=\"token punctuation\" >:</span> state <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> state<span class=\"token punctuation\" >.</span>count <span class=\"token operator\" >===</span> rate\n    <span class=\"token comment\" spellcheck=\"true\">// ...</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"Constraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":83,"column":0},"end":{"line":177,"column":1}},"line":83,"mixinTargets":[],"name":"Constraint","nodeInfo":{"type":"Object","properties":[{"key":"name","value":{"type":"Literal","value":"NullConstraint"}},{"key":"getInitialState"},{"key":"shouldConsumeEvent"},{"key":"eventWasConsumed"},{"key":"shouldProducePoint"},{"key":"pointWasProduced"}]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":"Constraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":83},{"type":"preserveOrder","string":"The interface of a constraint and its available hooks.\n\nConsult the [[README | README.md#constraints]] for the definition of a\nconstraint, this part will only be concerned with implementing one.\n\nA constraint is implemented through a series of functions applied to an\nobject called its state. The state has to capture whatever data is necessary\nto apply the constraint.\n\nThe implementation specifies a starting state in the [[.getInitialState |\n.getInitialState]] hook which will be created for every metric that utilizes\nthe constraint, and other hooks can adjust the state as needed.\n\nDuring [[refinement | refine]], we say that an [[event | ApplicationEvent]]\nis \"consumed\" when all the conditions of the defined constraints pass. Once\nan event is successfully consumed, we proceed to producing a [[metric point |\nMetricPoint]].\n\nA constraint allows you to control both stages of the process.\n\n### State and context advancement\n\nThe state and the [[application context | README.md#application-context]] can\nboth be \"advanced\" to a different version at the two distinct stages\ndescribed earlier: upon [[consuming an event | .eventWasConsumed]] and later\nupon [[producing a point | .pointWasProduced]].\n\nWhen a constraint blocks an event from being consumed, **NO changes to either\nthe state or the context will be made during refinement.**\n\nWhen a constraint blocks a point from being produced, **all side-effects\ncaused by the [[.eventWasConsumed]] hook from both the current and the other\nconstraints on the metric will persist.**\n\n### Example\n\nLet's assume we need an event to be triggered 3 times for a point to be\nproduced. A sample implementation could be:\n\n    {\n      name: 'ThrottleConstraint',\n\n      getInitialState: () => ({ count: 0 }),\n\n      shouldConsumeEvent: () => true,\n\n      // increment the counter\n      eventWasConsumed: state => ({ count: state.count + 1 }),\n\n      // did we collect 3 events yet?\n      shouldProducePoint: state => state.count === 3,\n\n      // we did collect 3 events by this point, reset the counter\n      pointWasProduced: () => ({ count: 0 })\n    }\n\n### Configuration\n\nIf it is possible for your constraint logic to be customized, define it as a\nfunction and have the user instantiate it with the parameters. For example,\nlet's revisit our sample implementation of the `ThrottleConstraint` to allow\nthe user to specify the rate:\n\n```javascript\nfunction ThrottleConstraint({ rate }) {\n  invariant(rate > 0, \"Throttle rate must be a positive number!\")\n\n  return {\n    // ...\n    shouldProducePoint: state => state.count === rate\n    // ...\n  }\n}\n```","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":83}],"type":"Object"},"type":"Document","meta":{"href":"/api/Constraint.html","anchor":"Constraint","htmlFilePath":"api/Constraint.html"},"documents":[],"entities":["4d6e1909772edb8dcf329bd2b4fce29b","f1647f5b3b0f016df6630a1f8def445e","f026691e4a594c35b082a5700d1949f0","31dacf7cb20c25619ea2173006bbfb09","497c56b2528a3f7baf0da46df568d80e","28c368351ecda978bc3e5f35f98aa283"],"uid":"87d30338731bc3d397afe55ac52dc6d3","summary":"The interface of a constraint and its available hooks.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/Constraint","indices":{"Constraint":1,"/lib/constraints/NullConstraint.js":1,"lib/constraints/NullConstraint.js":1}},{"id":".name","title":"Constraint.name","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":24}},"properties":{"aliases":[],"description":"","id":"Constraint.name","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":24}},"line":89,"mixinTargets":[],"name":"name","nodeInfo":{"type":"Literal","value":"NullConstraint"},"receiver":"Constraint","symbol":".","tags":[{"type":"property","string":"A name to associate with the constraint for debugging purposes.","typeInfo":{"name":"name","description":"<p>A name to associate with the constraint for debugging purposes.</p>\n","type":{"name":"String","html":"String"}},"line":89}],"type":"String"},"indices":{".name":0,"Constraint.name":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.name","anchor":".name","htmlFilePath":null},"uid":"4d6e1909772edb8dcf329bd2b4fce29b","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.name"},{"id":".getInitialState","title":"Constraint.getInitialState","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":36}},"properties":{"aliases":[],"description":"","id":"Constraint.getInitialState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":36}},"line":97,"mixinTargets":[],"name":"getInitialState","nodeInfo":{"type":"Unknown"},"receiver":"Constraint","symbol":".","tags":[{"type":"type","string":"","typeInfo":{"type":{"name":"Function"}},"line":97},{"type":"return","string":"The initial state of the constraint.","typeInfo":{"description":"<p>The initial state of the constraint.</p>\n","type":{"name":"Object"}},"line":97}],"type":"Function"},"indices":{".getInitialState":0,"Constraint.getInitialState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.getInitialState","anchor":".getInitialState","htmlFilePath":null},"uid":"f1647f5b3b0f016df6630a1f8def445e","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.getInitialState"},{"id":".shouldConsumeEvent","title":"Constraint.shouldConsumeEvent","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":113,"column":2},"end":{"line":113,"column":34}},"properties":{"aliases":[],"description":"<p>Test whether the event conforms to your conditions. You can utilize all of\nthe event, its data, as well as the application context to provide your\nanswer.</p>\n","id":"Constraint.shouldConsumeEvent","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":113,"column":2},"end":{"line":113,"column":34}},"line":113,"mixinTargets":[],"name":"shouldConsumeEvent","nodeInfo":{"type":"Unknown"},"receiver":"Constraint","symbol":".","tags":[{"type":"type","string":"Test whether the event conforms to your conditions. You can utilize all of\nthe event, its data, as well as the application context to provide your\nanswer.","typeInfo":{"description":"<p>Test whether the event conforms to your conditions. You can utilize all of\nthe event, its data, as well as the application context to provide your\nanswer.</p>\n","type":{"name":"Function"}},"line":113},{"type":"param","string":"","typeInfo":{"name":"state","type":{"name":"Object"}},"line":113},{"type":"param","string":"","typeInfo":{"name":"event","type":{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"refine.html#~ApplicationEvent\">ApplicationEvent</a>"}},"line":113},{"type":"param","string":"","typeInfo":{"name":"data","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":113},{"type":"param","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":113},{"type":"return","string":"","typeInfo":{"type":{"name":"Boolean","html":"Boolean"}},"line":113}],"type":"Function"},"indices":{".shouldConsumeEvent":0,"Constraint.shouldConsumeEvent":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.shouldConsumeEvent","anchor":".shouldConsumeEvent","htmlFilePath":null},"uid":"f026691e4a594c35b082a5700d1949f0","summary":"Test whether the event conforms to your conditions. You can utilize all of the event, its data, as well as the application context to provide your answer.","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.shouldConsumeEvent"},{"id":".eventWasConsumed","title":"Constraint.eventWasConsumed","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":144,"column":2},"end":{"line":144,"column":22}},"properties":{"aliases":[],"description":"<p>The return value of this hook will be treated as the next state of the\nconstraint. To leave the state without modification, simply return the\nfirst parameter or leave the hook undefined.</p>\n<p>To advance the state of dependencies as well as that of the constraint, a\n<a href=\"Tuple.html\" title=\"A construct for representing a pair of values.\" class=\"mega-link--internal\">Tuple</a> may be yielded. For example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\" >eventWasConsumed</span><span class=\"token punctuation\" >(</span>state<span class=\"token punctuation\" >,</span> event<span class=\"token punctuation\" >,</span> data<span class=\"token punctuation\" >,</span> context<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> nextState <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span>\n\n  <span class=\"token keyword\" >return</span> Tuple<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >of</span><span class=\"token punctuation\" >(</span>\n    nextState<span class=\"token punctuation\" >,</span>\n    Object<span class=\"token punctuation\" >.</span><span class=\"token function\" >assign</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> context<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\n      loginFailureCount<span class=\"token punctuation\" >:</span> context<span class=\"token punctuation\" >.</span>loginFailureCount <span class=\"token operator\" >+</span> <span class=\"token number\" >1</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"Constraint.eventWasConsumed","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":144,"column":2},"end":{"line":144,"column":22}},"line":144,"mixinTargets":[],"name":"eventWasConsumed","nodeInfo":{"type":"Function","params":[{"name":"x"}]},"receiver":"Constraint","symbol":".","tags":[{"type":"type","string":"The return value of this hook will be treated as the next state of the\nconstraint. To leave the state without modification, simply return the\nfirst parameter or leave the hook undefined.\n\nTo advance the state of dependencies as well as that of the constraint, a\n[[Tuple]] may be yielded. For example:\n\n    eventWasConsumed(state, event, data, context) {\n      const nextState = ...\n\n      return Tuple.of(\n        nextState,\n        Object.assign({}, context, {\n          loginFailureCount: context.loginFailureCount + 1\n        })\n      )\n    }","typeInfo":{"description":"<p>The return value of this hook will be treated as the next state of the\nconstraint. To leave the state without modification, simply return the\nfirst parameter or leave the hook undefined.</p>\n<p>To advance the state of dependencies as well as that of the constraint, a\n<a href=\"Tuple.html\" title=\"A construct for representing a pair of values.\" class=\"mega-link--internal\">Tuple</a> may be yielded. For example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\" >eventWasConsumed</span><span class=\"token punctuation\" >(</span>state<span class=\"token punctuation\" >,</span> event<span class=\"token punctuation\" >,</span> data<span class=\"token punctuation\" >,</span> context<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> nextState <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span>\n\n  <span class=\"token keyword\" >return</span> Tuple<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >of</span><span class=\"token punctuation\" >(</span>\n    nextState<span class=\"token punctuation\" >,</span>\n    Object<span class=\"token punctuation\" >.</span><span class=\"token function\" >assign</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> context<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\n      loginFailureCount<span class=\"token punctuation\" >:</span> context<span class=\"token punctuation\" >.</span>loginFailureCount <span class=\"token operator\" >+</span> <span class=\"token number\" >1</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span></code></pre>","type":{"name":"Function"}},"line":144},{"type":"param","string":"","typeInfo":{"name":"state","type":{"name":"Object"}},"line":144},{"type":"param","string":"","typeInfo":{"name":"event","type":{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"refine.html#~ApplicationEvent\">ApplicationEvent</a>"}},"line":144},{"type":"param","string":"","typeInfo":{"name":"data","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":144},{"type":"param","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":144},{"type":"return","string":"","typeInfo":{"type":{"name":"Union","elements":[{"name":"Union","elements":[{"name":"Object"},{"name":"Tuple","elements":[{"name":"Object"},{"name":"Object"}],"html":"<a class=\"mega-link--internal\" href=\"Tuple.html\" title=\"A construct for representing a pair of values.\">Tuple</a>"}]}]}},"line":144}],"type":"Function"},"indices":{".eventWasConsumed":0,"Constraint.eventWasConsumed":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.eventWasConsumed","anchor":".eventWasConsumed","htmlFilePath":null},"uid":"31dacf7cb20c25619ea2173006bbfb09","summary":"The return value of this hook will be treated as the next state of the constraint. To leave the state without modification, simply return the first parameter or leave the hook undefined.","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.eventWasConsumed"},{"id":".shouldProducePoint","title":"Constraint.shouldProducePoint","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":160,"column":2},"end":{"line":160,"column":34}},"properties":{"aliases":[],"description":"<p>Test whether a metric point is ready to be produced. Just like in\n<a href=\"#.shouldConsumeEvent\" title=\"Test whether the event conforms to your conditions. You can utilize all of the event, its data, as well as the application context to provide your answer.\" class=\"mega-link--internal\">.shouldConsumeEvent</a>, you can utilize the event,\nits data, and the application context to formulate an answer.</p>\n","id":"Constraint.shouldProducePoint","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":160,"column":2},"end":{"line":160,"column":34}},"line":160,"mixinTargets":[],"name":"shouldProducePoint","nodeInfo":{"type":"Unknown"},"receiver":"Constraint","symbol":".","tags":[{"type":"type","string":"Test whether a metric point is ready to be produced. Just like in\n[[.shouldConsumeEvent | .shouldConsumeEvent]], you can utilize the event,\nits data, and the application context to formulate an answer.","typeInfo":{"description":"<p>Test whether a metric point is ready to be produced. Just like in\n<a href=\"#.shouldConsumeEvent\" title=\"Test whether the event conforms to your conditions. You can utilize all of the event, its data, as well as the application context to provide your answer.\" class=\"mega-link--internal\">.shouldConsumeEvent</a>, you can utilize the event,\nits data, and the application context to formulate an answer.</p>\n","type":{"name":"Function"}},"line":160},{"type":"param","string":"","typeInfo":{"name":"state","type":{"name":"Object"}},"line":160},{"type":"param","string":"","typeInfo":{"name":"event","type":{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"refine.html#~ApplicationEvent\">ApplicationEvent</a>"}},"line":160},{"type":"param","string":"","typeInfo":{"name":"data","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":160},{"type":"param","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":160},{"type":"return","string":"","typeInfo":{"type":{"name":"Boolean","html":"Boolean"}},"line":160}],"type":"Function"},"indices":{".shouldProducePoint":0,"Constraint.shouldProducePoint":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.shouldProducePoint","anchor":".shouldProducePoint","htmlFilePath":null},"uid":"497c56b2528a3f7baf0da46df568d80e","summary":"Test whether a metric point is ready to be produced. Just like in [[.shouldConsumeEvent | .shouldConsumeEvent]], you can utilize the event, its data, and the application context to formulate an answer.","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.shouldProducePoint"},{"id":".pointWasProduced","title":"Constraint.pointWasProduced","summaryFields":["description"],"filePath":"lib/constraints/NullConstraint.js","loc":{"start":{"line":176,"column":2},"end":{"line":176,"column":22}},"properties":{"aliases":[],"description":"<p>Similar to <a href=\"#.eventWasConsumed\" title=\"The return value of this hook will be treated as the next state of the constraint. To leave the state without modification, simply return the first parameter or leave the hook undefined.\" class=\"mega-link--internal\">.eventWasConsumed</a> but triggered after a\npoint has been produced. Commonly you may implement this hook to reset\nstate, partially or otherwise.</p>\n","id":"Constraint.pointWasProduced","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":176,"column":2},"end":{"line":176,"column":22}},"line":176,"mixinTargets":[],"name":"pointWasProduced","nodeInfo":{"type":"Function","params":[{"name":"x"}]},"receiver":"Constraint","symbol":".","tags":[{"type":"type","string":"Similar to [[.eventWasConsumed | .eventWasConsumed]] but triggered after a\npoint has been produced. Commonly you may implement this hook to reset\nstate, partially or otherwise.","typeInfo":{"description":"<p>Similar to <a href=\"#.eventWasConsumed\" title=\"The return value of this hook will be treated as the next state of the constraint. To leave the state without modification, simply return the first parameter or leave the hook undefined.\" class=\"mega-link--internal\">.eventWasConsumed</a> but triggered after a\npoint has been produced. Commonly you may implement this hook to reset\nstate, partially or otherwise.</p>\n","type":{"name":"Function"}},"line":176},{"type":"param","string":"","typeInfo":{"name":"state","type":{"name":"Object"}},"line":176},{"type":"param","string":"","typeInfo":{"name":"event","type":{"name":"ApplicationEvent","html":"<a class=\"mega-link--internal\" href=\"refine.html#~ApplicationEvent\">ApplicationEvent</a>"}},"line":176},{"type":"param","string":"","typeInfo":{"name":"data","type":{"name":"Array","elements":[{"name":"DataPoint","html":"<a class=\"mega-link--internal\" href=\"DataPoint.html\" title=\"Functions for storing data from application events in metric points. These functions are utilized in the [[definition of metrics | createState]].\">DataPoint</a>"}],"html":"Array"}},"line":176},{"type":"param","string":"","typeInfo":{"name":"context","type":{"name":"Any","nullable":true,"html":"Any"}},"line":176},{"type":"return","string":"","typeInfo":{"type":{"name":"Union","elements":[{"name":"Union","elements":[{"name":"Object"},{"name":"Tuple","elements":[{"name":"Object"},{"name":"Object"}],"html":"<a class=\"mega-link--internal\" href=\"Tuple.html\" title=\"A construct for representing a pair of values.\">Tuple</a>"}]}]}},"line":176}],"type":"Function"},"indices":{".pointWasProduced":0,"Constraint.pointWasProduced":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/Constraint.html#.pointWasProduced","anchor":".pointWasProduced","htmlFilePath":null},"uid":"28c368351ecda978bc3e5f35f98aa283","summary":"Similar to [[.eventWasConsumed | .eventWasConsumed]] but triggered after a point has been produced. Commonly you may implement this hook to reset state, partially or otherwise.","parentNodeUID":"87d30338731bc3d397afe55ac52dc6d3","path":"api--constraints/Constraint.pointWasProduced"},{"id":"OrderConstraint","title":"OrderConstraint","summaryFields":["description"],"filePath":"lib/constraints/OrderConstraint.js","loc":{"start":{"line":30,"column":0},"end":{"line":59,"column":2}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce a point only if the specified events are triggered in the order\nspecified. Other events that are not specified but still were triggered are\nignored. If you need a &quot;strict&quot; sequence, consider using\n<a href=\"StrictOrderConstraint.html\" title=\"Produce a point only if the specified events and only they are triggered in the order specified. Should any unlisted event be triggered during the sequence, it is reset.\" class=\"mega-link--internal\">StrictOrderConstraint</a> instead.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> OrderConstraint<span class=\"token punctuation\" >,</span> ProximityConstraint <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Logged out very quickly'</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >ProximityConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> period<span class=\"token punctuation\" >:</span> Period<span class=\"token punctuation\" >.</span><span class=\"token function\" >seconds</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >30</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n\n    <span class=\"token function\" >OrderConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token string\" >'logged-in'</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token string\" >'logged-out'</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"OrderConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":30,"column":0},"end":{"line":59,"column":2}},"line":30,"mixinTargets":[],"name":"OrderConstraint","nodeInfo":{"type":"Function","params":[{"name":"events"}]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Produce a point only if the specified events are triggered in the order\nspecified. Other events that are not specified but still were triggered are\nignored. If you need a \"strict\" sequence, consider using\n[[StrictOrderConstraint]] instead.\n\n```javascript\nimport { OrderConstraint, ProximityConstraint } from 'full-metal-alchemy'\n\n{\n  name: 'Logged out very quickly',\n  constraints: [\n    ProximityConstraint({ period: Period.seconds(30) }),\n\n    OrderConstraint([\n      'logged-in',\n      'logged-out'\n    ])\n  ]\n}\n```","typeInfo":{"name":"OrderConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":30},{"type":"param","string":"","typeInfo":{"name":"events","type":{"name":"Array","elements":[{"name":"String","html":"String"}],"html":"Array"}},"line":30},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":30}],"type":"Function"},"type":"Document","meta":{"href":"/api/OrderConstraint.html","anchor":"OrderConstraint","htmlFilePath":"api/OrderConstraint.html"},"documents":[],"entities":[],"uid":"21c05d559cadfc1de531b7b3fc221903","summary":"Produce a point only if the specified events are triggered in the order specified. Other events that are not specified but still were triggered are ignored. If you need a \"strict\" sequence, consider using [[StrictOrderConstraint]] instead.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/OrderConstraint","indices":{"OrderConstraint":1,"/lib/constraints/OrderConstraint.js":1,"lib/constraints/OrderConstraint.js":1}},{"id":"ParametricRateConstraint","title":"ParametricRateConstraint","summaryFields":["description"],"filePath":"lib/constraints/ParametricRateConstraint.js","loc":{"start":{"line":26,"column":0},"end":{"line":60,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Like <a href=\"RateConstraint.html\" title=\"Throttle a point from being produced more than once during a certain period.\" class=\"mega-link--internal\">RateConstraint</a>, throttle a point from being produced more than\nonce during a certain period but <strong>for any specific data set</strong>.</p>\n<p>If the events differ in data, each data set is tracked in a separate time\nbucket.</p>\n","id":"ParametricRateConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":26,"column":0},"end":{"line":60,"column":1}},"line":26,"mixinTargets":[],"name":"ParametricRateConstraint","nodeInfo":{"type":"Function","params":[null]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Like [[./RateConstraint.js]], throttle a point from being produced more than\nonce during a certain period but **for any specific data set**.\n\nIf the events differ in data, each data set is tracked in a separate time\nbucket.","typeInfo":{"name":"ParametricRateConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":26},{"type":"param","string":"","typeInfo":{"name":"config","type":{"name":"Object"}},"line":26},{"type":"param","string":"","typeInfo":{"name":"config.period","type":{"name":"Period","html":"<a class=\"mega-link--internal\" href=\"Period.html\" title=\"Functions for representing and treating periods of time.\">Period</a>"}},"line":26},{"type":"param","string":"Implement this if the event data can not be serialized as JSON.","typeInfo":{"name":"config.serializeFn","description":"<p>Implement this if the event data can not be serialized as JSON.</p>\n","type":{"name":"Function","params":[{"name":"Object"}],"returnType":{"name":"String","html":"String"}}},"line":26},{"type":"param","string":"Use the context along with the data to identify buckets.","typeInfo":{"name":"config.useContext","description":"<p>Use the context along with the data to identify buckets.</p>\n","type":{"name":"Boolean","html":"Boolean"},"isOptional":true,"defaultValue":"false"},"line":26},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":26}],"type":"Function"},"type":"Document","meta":{"href":"/api/ParametricRateConstraint.html","anchor":"ParametricRateConstraint","htmlFilePath":"api/ParametricRateConstraint.html"},"documents":[],"entities":[],"uid":"8469a8b971d56fe77f04eeed8e718244","summary":"Like [[./RateConstraint.js]], throttle a point from being produced more than once during a certain period but for any specific data set.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/ParametricRateConstraint","indices":{"ParametricRateConstraint":1,"/lib/constraints/ParametricRateConstraint.js":1,"lib/constraints/ParametricRateConstraint.js":1}},{"id":"ProximityConstraint","title":"ProximityConstraint","summaryFields":["description"],"filePath":"lib/constraints/ProximityConstraint.js","loc":{"start":{"line":39,"column":0},"end":{"line":70,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce a point only if events are triggered within a certain period of each\nother. This constraint only works in conjunction with other constraints like\n<a href=\"OrderConstraint.html\" title=\"Produce a point only if the specified events are triggered in the order specified. Other events that are not specified but still were triggered are ignored. If you need a &quot;strict&quot; sequence, consider using [[StrictOrderConstraint]] instead.\" class=\"mega-link--internal\">OrderConstraint</a>, <a href=\"TypeConstraint.html\" title=\"Block events that do not match the specified names or data.\" class=\"mega-link--internal\">TypeConstraint</a> or <a href=\"FrequencyConstraint.html\" title=\"Produce a point only after a number of events have been triggered (and consumed). This constraint is mostly useful in conjunction with others.\" class=\"mega-link--internal\">FrequencyConstraint</a>.</p>\n<p>This constraint could be useful to look into repetition behavior. Perhaps we\nwant to know whether users are trying to add notes one after another but we\nknow the UI is clunky in how it lets you add notes and we want to improve\nthat if it&#39;s worth it.</p>\n<p>Considering the period between each time the user adds a note <em>could</em> be a\nway to glean into that, although it may not be fully reliable since we don&#39;t\nknow how long it takes them to write each note.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> OrderConstraint<span class=\"token punctuation\" >,</span> ProximityConstraint <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Repeatedly left notes'</span><span class=\"token punctuation\" >,</span>\n  events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'note-added'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >ProximityConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> period<span class=\"token punctuation\" >:</span> Period<span class=\"token punctuation\" >.</span><span class=\"token function\" >minutes</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token function\" >FrequencyConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >3</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"ProximityConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":39,"column":0},"end":{"line":70,"column":1}},"line":39,"mixinTargets":[],"name":"ProximityConstraint","nodeInfo":{"type":"Function","params":[null]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Produce a point only if events are triggered within a certain period of each\nother. This constraint only works in conjunction with other constraints like\n[[OrderConstraint]], [[TypeConstraint]] or [[FrequencyConstraint]].\n\nThis constraint could be useful to look into repetition behavior. Perhaps we\nwant to know whether users are trying to add notes one after another but we\nknow the UI is clunky in how it lets you add notes and we want to improve\nthat if it's worth it.\n\nConsidering the period between each time the user adds a note _could_ be a\nway to glean into that, although it may not be fully reliable since we don't\nknow how long it takes them to write each note.\n\n```javascript\nimport { OrderConstraint, ProximityConstraint } from 'full-metal-alchemy'\n\n{\n  name: 'Repeatedly left notes',\n  events: [ 'note-added' ],\n  constraints: [\n    ProximityConstraint({ period: Period.minutes(1) }),\n    FrequencyConstraint(3)\n  ]\n}\n```","typeInfo":{"name":"ProximityConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":39},{"type":"param","string":"","typeInfo":{"name":"config","type":{"name":"Object"}},"line":39},{"type":"param","string":"","typeInfo":{"name":"config.period","type":{"name":"Period","html":"<a class=\"mega-link--internal\" href=\"Period.html\" title=\"Functions for representing and treating periods of time.\">Period</a>"}},"line":39},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":39}],"type":"Function"},"type":"Document","meta":{"href":"/api/ProximityConstraint.html","anchor":"ProximityConstraint","htmlFilePath":"api/ProximityConstraint.html"},"documents":[],"entities":[],"uid":"9e5479651680a98dd51cec850d614e02","summary":"Produce a point only if events are triggered within a certain period of each other. This constraint only works in conjunction with other constraints like [[OrderConstraint]], [[TypeConstraint]] or [[FrequencyConstraint]].","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/ProximityConstraint","indices":{"ProximityConstraint":1,"/lib/constraints/ProximityConstraint.js":1,"lib/constraints/ProximityConstraint.js":1}},{"id":"RateConstraint","title":"RateConstraint","summaryFields":["description"],"filePath":"lib/constraints/RateConstraint.js","loc":{"start":{"line":41,"column":0},"end":{"line":75,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Throttle a point from being produced more than once during a certain period.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Period<span class=\"token punctuation\" >,</span> RateConstraint<span class=\"token punctuation\" >,</span> createState<span class=\"token punctuation\" >,</span> refine <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token keyword\" >let</span> metricState <span class=\"token operator\" >=</span> <span class=\"token function\" >createState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n  <span class=\"token punctuation\" >{</span>\n    name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Products: performed a search'</span><span class=\"token punctuation\" >,</span>\n    events<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span> <span class=\"token string\" >'products/search'</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n      <span class=\"token function\" >RateConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> period<span class=\"token punctuation\" >:</span> Period<span class=\"token punctuation\" >.</span><span class=\"token function\" >days</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >]</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n\nmetricState <span class=\"token operator\" >=</span> <span class=\"token function\" >refine</span><span class=\"token punctuation\" >(</span>metricState<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'products/search'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\nmetricState<span class=\"token punctuation\" >.</span>points<span class=\"token punctuation\" >.</span>length <span class=\"token comment\" spellcheck=\"true\">// => 1</span>\n\nmetricState <span class=\"token operator\" >=</span> <span class=\"token function\" >refine</span><span class=\"token punctuation\" >(</span>metricState<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'products/search'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\nmetricState<span class=\"token punctuation\" >.</span>points<span class=\"token punctuation\" >.</span>length <span class=\"token comment\" spellcheck=\"true\">// => 0</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// one day later</span>\nmetricState <span class=\"token operator\" >=</span> <span class=\"token function\" >refine</span><span class=\"token punctuation\" >(</span>metricState<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'products/search'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\nmetricState<span class=\"token punctuation\" >.</span>points<span class=\"token punctuation\" >.</span>length <span class=\"token comment\" spellcheck=\"true\">// => 1</span></code></pre>","id":"RateConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":41,"column":0},"end":{"line":75,"column":1}},"line":41,"mixinTargets":[],"name":"RateConstraint","nodeInfo":{"type":"Function","params":[null]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Throttle a point from being produced more than once during a certain period.\n\n```javascript\nimport { Period, RateConstraint, createState, refine } from 'full-metal-alchemy'\n\nlet metricState = createState([\n  {\n    name: 'Products: performed a search',\n    events: [ 'products/search' ],\n    constraints: [\n      RateConstraint({ period: Period.days(1) })\n    ]\n  }\n])\n\nmetricState = refine(metricState, [{ name: 'products/search' }])\nmetricState.points.length // => 1\n\nmetricState = refine(metricState, [{ name: 'products/search' }])\nmetricState.points.length // => 0\n\n// one day later\nmetricState = refine(metricState, [{ name: 'products/search' }])\nmetricState.points.length // => 1\n```","typeInfo":{"name":"RateConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":41},{"type":"param","string":"","typeInfo":{"name":"config","type":{"name":"Object"}},"line":41},{"type":"param","string":"The period during which only one point may be produced.","typeInfo":{"name":"config.period","description":"<p>The period during which only one point may be produced.</p>\n","type":{"name":"Period","html":"<a class=\"mega-link--internal\" href=\"Period.html\" title=\"Functions for representing and treating periods of time.\">Period</a>"}},"line":41},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":41}],"type":"Function"},"type":"Document","meta":{"href":"/api/RateConstraint.html","anchor":"RateConstraint","htmlFilePath":"api/RateConstraint.html"},"documents":[],"entities":[],"uid":"e7644e2c738f914e304576c3722e073f","summary":"Throttle a point from being produced more than once during a certain period.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/RateConstraint","indices":{"RateConstraint":1,"/lib/constraints/RateConstraint.js":1,"lib/constraints/RateConstraint.js":1}},{"id":"StrictOrderConstraint","title":"StrictOrderConstraint","summaryFields":["description"],"filePath":"lib/constraints/StrictOrderConstraint.js","loc":{"start":{"line":40,"column":0},"end":{"line":72,"column":2}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce a point only if the specified events <strong>and only they</strong> are triggered\nin the order specified. Should any unlisted event be triggered during the\nsequence, it is reset.</p>\n<p>This constraint could be useful to locate work-arounds made by users to\nachieve some function. Consider for example that we have a product listing\npage which we&#39;ve recently improved to allow users to deactivate products\nright from that page instead of going to their detail pages and deactivating\nthem one by one.</p>\n<p>One way to capture the previous behavior could be to check whether the user\nis visiting the product page only to deactivate it then to leave within 5\nseconds of each interaction.</p>\n<p>The metric below represents that:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> StrictOrderConstraint <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'full-metal-alchemy'</span>\n\n<span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Visited product page to delete product'</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >StrictOrderConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token string\" >'page-visit/product'</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token string\" >'product-deactivated'</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token string\" >'page-leave/product'</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"StrictOrderConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":40,"column":0},"end":{"line":72,"column":2}},"line":40,"mixinTargets":[],"name":"StrictOrderConstraint","nodeInfo":{"type":"Function","params":[{"name":"events"}]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Produce a point only if the specified events **and only they** are triggered\nin the order specified. Should any unlisted event be triggered during the\nsequence, it is reset.\n\nThis constraint could be useful to locate work-arounds made by users to\nachieve some function. Consider for example that we have a product listing\npage which we've recently improved to allow users to deactivate products\nright from that page instead of going to their detail pages and deactivating\nthem one by one.\n\nOne way to capture the previous behavior could be to check whether the user\nis visiting the product page only to deactivate it then to leave within 5\nseconds of each interaction.\n\nThe metric below represents that:\n\n```javascript\nimport { StrictOrderConstraint } from 'full-metal-alchemy'\n\n{\n  name: 'Visited product page to delete product',\n  constraints: [\n    StrictOrderConstraint([\n      'page-visit/product',\n      'product-deactivated',\n      'page-leave/product'\n    ])\n  ]\n}\n```","typeInfo":{"name":"StrictOrderConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":40},{"type":"param","string":"","typeInfo":{"name":"events","type":{"name":"Array","elements":[{"name":"String","html":"String"}],"html":"Array"}},"line":40},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":40}],"type":"Function"},"type":"Document","meta":{"href":"/api/StrictOrderConstraint.html","anchor":"StrictOrderConstraint","htmlFilePath":"api/StrictOrderConstraint.html"},"documents":[],"entities":[],"uid":"e3e4589bd681b50ef742c5c400a78101","summary":"Produce a point only if the specified events and only they are triggered in the order specified. Should any unlisted event be triggered during the sequence, it is reset.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/StrictOrderConstraint","indices":{"StrictOrderConstraint":1,"/lib/constraints/StrictOrderConstraint.js":1,"lib/constraints/StrictOrderConstraint.js":1}},{"id":"TypeConstraint","title":"TypeConstraint","summaryFields":["description"],"filePath":"lib/constraints/TypeConstraint.js","loc":{"start":{"line":54,"column":0},"end":{"line":74,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Block events that do not match the specified names or data.</p>\n<p>This constraint is created implicitly if you define the <a href=\"createState.html#~Metric.events\" class=\"mega-link--internal\">.events</a> property on a metric.</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Logged in'</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >TypeConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token string\" >'logged-in'</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"TypeConstraint","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":54,"column":0},"end":{"line":74,"column":1}},"line":54,"mixinTargets":[],"name":"TypeConstraint","nodeInfo":{"type":"Function","params":[{"name":"events"}]},"receiver":"module","symbol":null,"tags":[{"type":"module","string":"Block events that do not match the specified names or data.\n\nThis constraint is created implicitly if you define the [[.events |\ncreateState~Metric.events]] property on a metric.\n\n    {\n      name: 'Logged in',\n      constraints: [\n        TypeConstraint([\n          'logged-in'\n        ])\n      ]\n    }","typeInfo":{"name":"TypeConstraint","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":54},{"type":"param","string":"Passing a string for an event name ignores the event data. If you\nwant to filter by data or context, implement the structure described\nbelow.","typeInfo":{"name":"events","description":"<p>Passing a string for an event name ignores the event data. If you\nwant to filter by data or context, implement the structure described\nbelow.</p>\n","type":{"name":"Array","elements":[{"name":"Union","elements":[{"name":"String","html":"String"},{"name":"TypeConstraint~EventChecker","html":"<a class=\"mega-link--internal\" href=\"#~EventChecker\" title=\"A specification for both event name and the data (or context) it is triggered with.\">TypeConstraint~EventChecker</a>"}]}],"html":"Array"}},"line":54},{"type":"return","string":"","typeInfo":{"type":{"name":"Constraint","html":"<a class=\"mega-link--internal\" href=\"Constraint.html\" title=\"The interface of a constraint and its available hooks.\">Constraint</a>"}},"line":54}],"type":"Function"},"type":"Document","meta":{"href":"/api/TypeConstraint.html","anchor":"TypeConstraint","htmlFilePath":"api/TypeConstraint.html"},"documents":[],"entities":["66489fdc044ab33d4818eec7f6432b3d"],"uid":"b00f1e960a154ab3ecf1f2f3ff03a4a9","summary":"Block events that do not match the specified names or data.","parentNodeUID":"6338c054efb0f92b638f47e7977adbb4","path":"api--constraints/TypeConstraint","indices":{"TypeConstraint":1,"/lib/constraints/TypeConstraint.js":1,"lib/constraints/TypeConstraint.js":1}},{"id":"~EventChecker","title":"TypeConstraint~EventChecker","summaryFields":["description"],"filePath":"lib/constraints/TypeConstraint.js","loc":{"start":{"line":54,"column":0},"end":{"line":74,"column":1}},"properties":{"aliases":[],"description":"<p>A specification for both event name and the data (or context) it is triggered\nwith.</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Logged in (mobile)'</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >TypeConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'logged-in'</span><span class=\"token punctuation\" >,</span> when<span class=\"token punctuation\" >:</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span>isUsingMobile <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"TypeConstraint~EventChecker","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":54,"column":0},"end":{"line":74,"column":1}},"line":54,"mixinTargets":[],"name":"EventChecker","nodeInfo":{"type":"Function","params":[{"name":"events"}]},"receiver":"TypeConstraint","symbol":"~","tags":[{"type":"typedef","string":"","typeInfo":{"name":"TypeConstraint~EventChecker","description":null,"isOptional":null,"defaultValue":null,"type":{"0":"o","1":"b","2":"j","3":"e","4":"c","5":"t"}},"line":54},{"type":"type","string":"A specification for both event name and the data (or context) it is triggered\nwith.\n\n    {\n      name: 'Logged in (mobile)',\n      constraints: [\n        TypeConstraint([\n          { name: 'logged-in', when: data => data.isUsingMobile }\n        ])\n      ]\n    }","typeInfo":{"description":"<p>A specification for both event name and the data (or context) it is triggered\nwith.</p>\n<pre class=\"language-javascript\"><code><span class=\"token punctuation\" >{</span>\n  name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'Logged in (mobile)'</span><span class=\"token punctuation\" >,</span>\n  constraints<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n    <span class=\"token function\" >TypeConstraint</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'logged-in'</span><span class=\"token punctuation\" >,</span> when<span class=\"token punctuation\" >:</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span>isUsingMobile <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >]</span>\n<span class=\"token punctuation\" >}</span></code></pre>","type":{"name":"Object"}},"line":54},{"type":"property","string":"The name of the event.","typeInfo":{"name":"name","description":"<p>The name of the event.</p>\n","type":{"name":"String","html":"String"}},"line":54},{"type":"property","string":"A predicate function to check if the data is OK. Arguments are\n[data, context].","typeInfo":{"name":"data","description":"<p>A predicate function to check if the data is OK. Arguments are\n[data, context].</p>\n","type":{"name":"Function","params":[{"name":"Object"},{"name":"Object"}],"returnType":{"name":"Boolean","html":"Boolean"}}},"line":54}],"type":"Object"},"indices":{"~EventChecker":0,"TypeConstraint~EventChecker":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/api/TypeConstraint.html#~EventChecker","anchor":"~EventChecker","htmlFilePath":null},"uid":"66489fdc044ab33d4818eec7f6432b3d","summary":"A specification for both event name and the data (or context) it is triggered with.","parentNodeUID":"b00f1e960a154ab3ecf1f2f3ff03a4a9","path":"api--constraints/TypeConstraint~EventChecker"}]}))
  